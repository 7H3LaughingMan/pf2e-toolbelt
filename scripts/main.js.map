{
  "version": 3,
  "sources": ["../src/module.js", "../src/features/arp.js", "../src/features/shared/hook.js", "../src/features/effects.js", "../src/apps/giveth/popup.js", "../src/features/giveth.js", "../src/apps/knowledges/lores.js", "../src/features/knowledges.js", "../src/apps/merge/multi.js", "../src/features/merge.js", "../src/features/nobulk.js", "../src/features/stances.js", "../src/features/summary.js", "../src/features/unided.js", "../src/apps/hero/trade.js", "../src/features/hero.js", "../src/main.js"],
  "sourcesContent": ["export const MODULE_ID = 'pf2e-toolbelt'\r\n\r\nexport function getSetting(setting) {\r\n    return game.settings.get(MODULE_ID, setting)\r\n}\r\n\r\nexport function setSetting(key, value) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\nexport function localize(...args) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function subLocalize(subKey) {\r\n    const fn = (...args) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: key => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: key => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        template: {\r\n            value: (key, { hash }) => fn(key, hash),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn\r\n}\r\n\r\nfunction notify(str, arg1, arg2, arg3) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n\r\nexport function registerWrapper(path, callback) {\r\n    libWrapper.register(MODULE_ID, path, callback)\r\n}\r\n\r\nexport function getFlag(doc, key, fallback) {\r\n    return doc.getFlag(MODULE_ID, key) ?? fallback\r\n}\r\n\r\nexport function setFlag(doc, key, value) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function templatePath(...path) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `modules/${MODULE_ID}/templates/${path.join('/')}.hbs`\r\n}\r\n\r\nexport function localeCompare(a, b) {\r\n    return a.localeCompare(b, game.i18n.lang)\r\n}\r\n\r\nexport function socketOn(callback) {\r\n    game.socket.on(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketOff(callback) {\r\n    game.socket.off(`module.${MODULE_ID}`, callback)\r\n}\r\n\r\nexport function socketEmit(packet) {\r\n    game.socket.emit(`module.${MODULE_ID}`, packet)\r\n}\r\n\r\nexport function isActiveGM() {\r\n    return game.user === game.users.activeGM\r\n}\r\n\r\nexport function registerUpstreamHook(hook, fn) {\r\n    const id = Hooks.on(hook, fn)\r\n    const index = Hooks.events[hook].findIndex(x => x.id === id)\r\n\r\n    if (index !== 0) {\r\n        const [hooked] = Hooks.events[hook].splice(index, 1)\r\n        Hooks.events[hook].unshift(hooked)\r\n    }\r\n\r\n    return id\r\n}\r\n\r\nexport function isGMOnline() {\r\n    return game.users.some(user => user.active && user.isGM)\r\n}\r\n\r\nexport function chatUUID(uuid, label, fake = false) {\r\n    if (fake) {\r\n        return `<span style=\"background: #DDD; padding: 1px 4px; border: 1px solid var(--color-border-dark-tertiary);\r\nborder-radius: 2px; white-space: nowrap; word-break: break-all;\">${label}</span>`\r\n    } else {\r\n        if (label) return `@UUID[${uuid}]{${label}}`\r\n        return `@UUID[${uuid}]`\r\n    }\r\n}\r\n\r\nexport function getSourceId(doc) {\r\n    return doc.getFlag('core', 'sourceId')\r\n}\r\n\r\nexport function includesSourceId(doc, list) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n\r\nfunction getItemSourceIdCondition(sourceId) {\r\n    return Array.isArray(sourceId) ? item => includesSourceId(item, sourceId) : item => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function hasItemWithSourceId(actor, sourceId, itemTypes) {\r\n    return getItems(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function getItems(actor, itemTypes) {\r\n    itemTypes = typeof itemTypes === 'string' ? [itemTypes] : itemTypes\r\n    return itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type]) : actor.items\r\n}\r\n\r\nexport function refreshCharacterSheets(actor) {\r\n    for (const win of Object.values(ui.windows)) {\r\n        const winActor = win.actor\r\n        if (!(win instanceof ActorSheet) || !winActor.isOfType('character')) continue\r\n        if (!actor || actor === winActor) win.render()\r\n    }\r\n}\r\n\r\nexport function documentUuidFromTableResult(result) {\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.TEXT) return /@UUID\\[([\\w\\.]+)\\]/.exec(result.text)?.[1]\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.DOCUMENT) return `${result.documentCollection}.${result.documentId}`\r\n    if (result.type === CONST.TABLE_RESULT_TYPES.COMPENDIUM) return `Compendium.${result.documentCollection}.${result.documentId}`\r\n    return undefined\r\n}\r\n\r\nexport function getCharacterOwner(actor, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && x.character === actor)\r\n    return game.users.find(x => x.character === actor)\r\n}\r\n\r\nexport function getOwner(doc, connected = false) {\r\n    if (connected) return game.users.find(x => x.active && doc.testUserPermission(x, 'OWNER'))\r\n    return game.users.find(x => doc.testUserPermission(x, 'OWNER'))\r\n}\r\n", "import { getSetting, info, registerWrapper } from '../module'\r\n\r\nconst PREPARE_WEAPON_DATA = 'CONFIG.PF2E.Item.documentClasses.weapon.prototype.prepareBaseData'\r\nconst PREPARE_WEAPON_DERIVED_DATA = 'CONFIG.PF2E.Item.documentClasses.weapon.prototype.prepareDerivedData'\r\nconst PREPARE_ARMOR_DATA = 'CONFIG.PF2E.Item.documentClasses.armor.prototype.prepareBaseData'\r\nconst PREPARE_ARMOR_DERIVED_DATA = 'CONFIG.PF2E.Item.documentClasses.armor.prototype.prepareDerivedData'\r\n\r\nconst WEAPON_EXCLUDES = ['Compendium.pf2e.equipment-srd.Item.ZhxxqYpVdVx0jSMm']\r\n\r\nexport function registerArp() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'arp',\r\n                type: Boolean,\r\n                default: false,\r\n                requiresReload: true,\r\n            },\r\n        ],\r\n        conflicts: ['pf2e-arp'],\r\n        init: () => {\r\n            if (!getSetting('arp')) return\r\n            registerWrapper(PREPARE_WEAPON_DATA, onPrepareWeaponData, 'WRAPPER')\r\n            registerWrapper(PREPARE_WEAPON_DERIVED_DATA, onPrepareWeaponDerivedData, 'WRAPPER')\r\n            registerWrapper(PREPARE_ARMOR_DATA, onPrepareArmorData, 'WRAPPER')\r\n            registerWrapper(PREPARE_ARMOR_DERIVED_DATA, onPrepareArmorDerivedData, 'WRAPPER')\r\n        },\r\n        ready: isGM => {\r\n            if (isGM && getSetting('arp') && game.settings.get('pf2e', 'automaticBonusVariant') !== 'noABP') {\r\n                game.settings.set('pf2e', 'automaticBonusVariant', 'noABP')\r\n                info('arp.forceVariant')\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nfunction isValidActor(actor, isCharacter = false) {\r\n    return actor && !actor.getFlag('pf2e', 'disableABP') && (!isCharacter || actor.isOfType('character'))\r\n}\r\n\r\nfunction isValidWeapon(weapon) {\r\n    const traits = weapon._source.system.traits.value\r\n    return !traits.includes('alchemical') && !traits.includes('bomb') && !WEAPON_EXCLUDES.includes(weapon.sourceId)\r\n}\r\n\r\nfunction onPrepareWeaponData(wrapped) {\r\n    const actor = this.actor\r\n    if (!isValidActor(actor, true) || !isValidWeapon(this)) return wrapped()\r\n\r\n    const level = actor.level\r\n\r\n    const traits = this._source.system.traits.value\r\n    if (traits.includes('alchemical') && traits.includes('bomb')) return wrapped()\r\n\r\n    this.system.potencyRune.value = level < 2 ? null : level < 10 ? 1 : level < 16 ? 2 : 3\r\n    this.system.strikingRune.value = level < 4 ? null : level < 12 ? 'striking' : level < 19 ? 'greaterStriking' : 'majorStriking'\r\n\r\n    wrapped()\r\n}\r\n\r\nconst WEAPON_POTENCY_PRICE = {\r\n    1: 35,\r\n    2: 935,\r\n    3: 8935,\r\n    4: 8935,\r\n}\r\nconst WEAPON_STRIKING_PRICE = {\r\n    striking: 65,\r\n    greaterStriking: 1065,\r\n    majorStriking: 31065,\r\n}\r\nfunction onPrepareWeaponDerivedData(wrapped) {\r\n    wrapped()\r\n\r\n    if (!isValidActor(this.actor) || this.isSpecific || !isValidWeapon(this)) return\r\n\r\n    let gp = this.price.value.goldValue\r\n\r\n    const potency = this.system.potencyRune.value\r\n    if (potency) gp -= WEAPON_POTENCY_PRICE[potency]\r\n\r\n    const striking = this.system.strikingRune.value\r\n    if (striking) gp -= WEAPON_STRIKING_PRICE[striking]\r\n\r\n    if ((potency || striking) && !this.system.runes.property.length)\r\n        gp += new game.pf2e.Coins(this._source.system.price.value).goldValue\r\n\r\n    this.system.price.value = new game.pf2e.Coins({ gp })\r\n}\r\n\r\nfunction isValidArmor(armor) {\r\n    return !armor.isShield\r\n}\r\n\r\nfunction onPrepareArmorData(wrapped) {\r\n    const actor = this.actor\r\n    if (!isValidActor(actor, true) || !isValidArmor(this)) return wrapped()\r\n\r\n    const level = actor.level\r\n\r\n    this.system.potencyRune.value = level < 5 ? null : level < 11 ? 1 : level < 18 ? 2 : 3\r\n    this.system.resiliencyRune.value =\r\n        level < 8 ? null : level < 14 ? 'resilient' : level < 20 ? 'greaterResilient' : 'majorResilient'\r\n\r\n    wrapped()\r\n}\r\n\r\nconst ARMOR_POTENCY_PRICE = {\r\n    1: 160,\r\n    2: 1060,\r\n    3: 20560,\r\n    4: 20560,\r\n}\r\nconst ARMOR_RESILIENCY_PRICE = {\r\n    resilient: 340,\r\n    greaterResilient: 3440,\r\n    majorResilient: 49440,\r\n}\r\nfunction onPrepareArmorDerivedData(wrapped) {\r\n    wrapped()\r\n\r\n    if (!isValidActor(this.actor) || this.isSpecific || !isValidArmor(this)) return\r\n\r\n    let gp = this.price.value.goldValue\r\n\r\n    const potency = this.system.potencyRune.value\r\n    if (potency) gp -= ARMOR_POTENCY_PRICE[potency]\r\n\r\n    const resiliency = this.system.resiliencyRune.value\r\n    if (resiliency) gp -= ARMOR_RESILIENCY_PRICE[resiliency]\r\n\r\n    if ((potency || resiliency) && !this.system.runes.property.length)\r\n        gp += new game.pf2e.Coins(this._source.system.price.value).goldValue\r\n\r\n    this.system.price.value = new game.pf2e.Coins({ gp })\r\n}\r\n", "import { getSetting } from '../../module'\r\n\r\nexport function createHook(event, listener, callback = () => {}) {\r\n    let HOOK = null\r\n\r\n    return function (value, otherSettings = []) {\r\n        if (typeof otherSettings === 'string') otherSettings = [otherSettings]\r\n\r\n        value ||= otherSettings.some(s => getSetting(s))\r\n\r\n        if (value && !HOOK) {\r\n            HOOK = Hooks.on(event, listener)\r\n        } else if (!value && HOOK) {\r\n            Hooks.off(event, HOOK)\r\n            HOOK = null\r\n        }\r\n\r\n        callback(value)\r\n    }\r\n}\r\n\r\nexport function createChoicesHook(event, listener, callback = () => {}) {\r\n    let HOOK = null\r\n\r\n    return function (value) {\r\n        if (value === 'disabled' && HOOK) {\r\n            Hooks.off(event, HOOK)\r\n            HOOK = null\r\n        } else if (value !== 'disabled' && !HOOK) {\r\n            HOOK = Hooks.on(event, listener)\r\n        }\r\n\r\n        callback(value)\r\n    }\r\n}\r\n", "import { getSetting, localize } from '../module'\r\nimport { createHook } from './shared/hook'\r\n\r\nconst setHook = createHook('renderEffectsPanel', renderEffectsPanel, refreshEffectsPanel)\r\n\r\nexport function registerEffectsPanelHelper() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'effect-remove',\r\n                type: Boolean,\r\n                default: false,\r\n                scope: 'client',\r\n                onChange: value => setHook(value, 'condition-sheet'),\r\n            },\r\n            {\r\n                name: 'condition-sheet',\r\n                type: Boolean,\r\n                default: false,\r\n                scope: 'client',\r\n                onChange: value => setHook(value, 'effect-remove'),\r\n            },\r\n        ],\r\n        conflicts: ['pf2e-effect-description'],\r\n        init: () => {\r\n            setHook(false, ['effect-remove', 'condition-sheet'])\r\n        },\r\n    }\r\n}\r\n\r\nfunction refreshEffectsPanel() {\r\n    game.pf2e.effectPanel?.render()\r\n}\r\n\r\nfunction renderEffectsPanel(panel, html) {\r\n    const removeRow = `<div>${localize('effects.remove')}</div>`\r\n    const editIcon = `<a data-action=\"edit\" data-tooltip=\"Edit Item\"><i class=\"fa-solid fa-fw fa-pencil\"></i></a>`\r\n\r\n    const effectPanels = html.find('.effect-item[data-item-id]').toArray()\r\n    for (const effectPanel of effectPanels) {\r\n        const id = effectPanel.dataset.itemId\r\n        const effect = panel.actor?.items.get(id)\r\n        if (!effect) continue\r\n\r\n        if (getSetting('effect-remove') && !effect.isLocked && effect.badge && effect.badge.type === 'counter') {\r\n            effectPanel.querySelector('.effect-info .instructions').insertAdjacentHTML('beforeend', removeRow)\r\n            effectPanel.querySelector('.icon').addEventListener('contextmenu', event => onRemoveEffect(event, panel), true)\r\n        }\r\n\r\n        if (getSetting('condition-sheet') && effect.isOfType('condition')) {\r\n            const h1 = effectPanel.querySelector('.effect-info > h1')\r\n            h1.insertAdjacentHTML('beforeend', editIcon)\r\n            h1.querySelector('[data-action=\"edit\"]').addEventListener('click', event => onConditionSheet(event, panel))\r\n        }\r\n    }\r\n}\r\n\r\nfunction onConditionSheet(event, panel) {\r\n    const effect = getEffect(event, panel)\r\n    if (!effect?.isOfType('condition')) return\r\n    event.preventDefault()\r\n    effect.sheet.render(true)\r\n}\r\n\r\nfunction onRemoveEffect(event, panel) {\r\n    if (!event.shiftKey) return\r\n\r\n    const effect = getEffect(event, panel)\r\n    if (!effect || effect.isLocked || !effect.badge || effect.badge.type !== 'counter') return\r\n\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n    event.stopImmediatePropagation()\r\n\r\n    effect.delete()\r\n}\r\n\r\nfunction getEffect(event, panel) {\r\n    const target = event.currentTarget\r\n    const effect = target.closest('.effect-item[data-item-id]')\r\n    const id = effect.dataset.itemId\r\n    return panel.actor?.items.get(id)\r\n}\r\n", "export class MoveLootPopup extends FormApplication {\r\n    constructor(object, options, callback) {\r\n        super(object, options)\r\n        this.onSubmitCallback = callback\r\n    }\r\n\r\n    async getData() {\r\n        const [prompt, buttonLabel] = this.options.isPurchase\r\n            ? ['PF2E.loot.PurchaseLootMessage', 'PF2E.loot.PurchaseLoot']\r\n            : ['PF2E.loot.MoveLootMessage', 'PF2E.loot.MoveLoot']\r\n\r\n        return {\r\n            ...(await super.getData()),\r\n            maxQuantity: this.options.maxQuantity,\r\n            newStack: this.options.newStack,\r\n            lockStack: this.options.lockStack,\r\n            prompt,\r\n            buttonLabel,\r\n        }\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return {\r\n            ...super.defaultOptions,\r\n            id: 'MoveLootPopup',\r\n            classes: [],\r\n            title: game.i18n.localize('PF2E.loot.MoveLootPopupTitle'),\r\n            template: 'systems/pf2e/templates/popups/loot/move-loot-popup.hbs',\r\n            width: 'auto',\r\n            maxQuantity: 1,\r\n            newStack: false,\r\n            lockStack: false,\r\n            isPurchase: false,\r\n        }\r\n    }\r\n\r\n    async _updateObject(_event, formData) {\r\n        this.onSubmitCallback(formData.quantity, formData.newStack)\r\n    }\r\n}\r\n", "import { MoveLootPopup } from '../apps/giveth/popup'\r\nimport {\r\n    chatUUID,\r\n    getSetting,\r\n    isActiveGM,\r\n    isGMOnline,\r\n    localize,\r\n    registerUpstreamHook,\r\n    socketEmit,\r\n    socketOff,\r\n    socketOn,\r\n    warn,\r\n} from '../module'\r\n\r\nlet enabled = false\r\nlet CANVAS_HOOK = null\r\n\r\nexport function registerGiveth() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'giveth',\r\n                type: String,\r\n                default: 'disabled',\r\n                choices: ['disabled', 'enabled', 'no-message'],\r\n                onChange: setup,\r\n            },\r\n        ],\r\n        conflicts: ['pf2e-giveth'],\r\n        ready: isGM => {\r\n            if (getSetting('giveth') !== 'disabled') setup(true)\r\n        },\r\n    }\r\n}\r\n\r\nfunction setup(value) {\r\n    const isGM = game.user.isGM\r\n\r\n    if (value === 'disabled' && enabled) {\r\n        if (isGM) socketOff(onSocket)\r\n        else if (CANVAS_HOOK) {\r\n            Hooks.off('dropCanvasData', CANVAS_HOOK)\r\n            CANVAS_HOOK = null\r\n        }\r\n        enabled = false\r\n    } else if (value !== 'disabled' && !enabled) {\r\n        if (isGM) socketOn(onSocket)\r\n        else if (!CANVAS_HOOK) CANVAS_HOOK = registerUpstreamHook('dropCanvasData', onDropCanvasData)\r\n        enabled = true\r\n    }\r\n}\r\n\r\nfunction onSocket(packet) {\r\n    if (!isActiveGM()) return\r\n    if (packet.type === 'giveth-condition') takethCondition(packet)\r\n    else if (packet.type === 'giveth-effect') takethEffect(packet)\r\n    else takethPhysical(packet)\r\n}\r\n\r\nfunction onDropCanvasData(canvas, data) {\r\n    if (!isGMOnline()) return true\r\n\r\n    const details = getDetailsFromData(data)\r\n    if (!details) return true\r\n\r\n    const target = canvas.tokens.placeables\r\n        .slice()\r\n        .filter(token => {\r\n            if (!token.document.actorLink) return false\r\n            const target = token.actor\r\n            if (!isValidActor(target, data.actorId) || target.isOwner) return false\r\n            const maximumX = token.x + (token.hitArea?.right ?? 0)\r\n            const maximumY = token.y + (token.hitArea?.bottom ?? 0)\r\n            return data.x >= token.x && data.y >= token.y && data.x <= maximumX && data.y <= maximumY\r\n        })\r\n        .sort((a, b) => b.document.sort - a.document.sort)\r\n        .at(0)?.actor\r\n\r\n    if (!target) return true\r\n\r\n    giveth(details.actor, target, details.item, details.value)\r\n    return false\r\n}\r\n\r\nfunction giveth(origin, target, item, value) {\r\n    const ownerId = origin.id\r\n    const targetId = target.id\r\n    const isIndex = !(item instanceof Item)\r\n\r\n    if (!isIndex && item.isOfType('physical')) {\r\n        const qty = item.quantity\r\n        if (qty < 1) return warn('giveth.notification.zero')\r\n\r\n        if (qty === 1) return sendPhysicalRequest(ownerId, targetId, item.id, 1, false)\r\n\r\n        new MoveLootPopup(origin, { maxQuantity: qty, lockStack: false, isPurchase: false }, (qty, stack) => {\r\n            sendPhysicalRequest(ownerId, targetId, item.id, qty, stack)\r\n        }).render(true)\r\n    } else {\r\n        const uuid = isIndex ? `Compendium.${item.pack}.${item._id}` : item.uuid\r\n        if (item.type === 'condition') {\r\n            socketEmit({\r\n                type: 'giveth-condition',\r\n                targetId,\r\n                value: value ?? 1,\r\n                uuid,\r\n            })\r\n        } else {\r\n            socketEmit({\r\n                type: 'giveth-effect',\r\n                targetId,\r\n                uuid,\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction sendPhysicalRequest(ownerId, targetId, itemId, qty, stack) {\r\n    socketEmit({\r\n        type: 'giveth-physical',\r\n        ownerId,\r\n        targetId,\r\n        itemId,\r\n        qty,\r\n        stack,\r\n    })\r\n}\r\n\r\nfunction isValidActor(actor, id) {\r\n    if (!actor || (id && actor.id === id)) return false\r\n    return actor.hasPlayerOwner && !actor.isToken && actor.isOfType('character', 'npc', 'vehicle')\r\n}\r\n\r\nfunction getDetailsFromData(data) {\r\n    if (data.tokenId || data.type !== 'Item' || !data.uuid) return\r\n\r\n    const item = fromUuidSync(data.uuid)\r\n    if (!item) return\r\n\r\n    let actor = item.actor\r\n    if (!actor) {\r\n        const actorUUID = data.context?.origin.actor\r\n        actor = actorUUID ? fromUuidSync(actorUUID) : null\r\n    }\r\n\r\n    if (!isValidActor(actor) || !actor.isOwner) return\r\n\r\n    const isIndex = !(item instanceof Item)\r\n    if (isIndex && item.pack && ['effect', 'condition'].includes(item.type)) return { actor, item, value: data.value }\r\n    if (!isIndex && item.isOfType('physical', 'effect')) return { actor, item, value: data.value }\r\n}\r\n\r\nasync function takethCondition({ targetId, uuid, value }) {\r\n    const target = game.actors.get(targetId)\r\n    if (!target) return\r\n\r\n    const item = await fromUuid(uuid)\r\n    if (!item) return\r\n\r\n    target.increaseCondition(item.slug, { min: value })\r\n}\r\n\r\nasync function takethEffect({ targetId, uuid }) {\r\n    const target = game.actors.get(targetId)\r\n    if (!target) return\r\n\r\n    const item = await fromUuid(uuid)\r\n    if (!item) return\r\n\r\n    const source = item.clone({ 'system.tokenIcon.show': true, 'system.unidentified': false }).toObject()\r\n    target.createEmbeddedDocuments('Item', [source])\r\n}\r\n\r\nasync function takethPhysical({ itemId, ownerId, qty, stack, targetId }) {\r\n    const owner = game.actors.get(ownerId)\r\n    const target = game.actors.get(targetId)\r\n    if (!owner || !target) return\r\n\r\n    const item = owner.items.get(itemId)\r\n    if (!item) return\r\n\r\n    qty = Math.min(qty, item.quantity)\r\n    const newQty = item.quantity - qty\r\n\r\n    const source = item.toObject()\r\n    source.system.quantity = qty\r\n    source.system.equipped.carryType = 'worn'\r\n    if (item.isOfType('physical') && 'invested' in source.system.equipped) {\r\n        source.system.equipped.invested = item.traits.has('invested') ? false : null\r\n    }\r\n\r\n    const newItem = await target.addToInventory(source, undefined, stack)\r\n    if (!newItem) return\r\n\r\n    if (newQty < 1) item.delete()\r\n    else item.update({ 'system.quantity': newQty })\r\n\r\n    if (getSetting('giveth') === 'no-message') return\r\n\r\n    let content = chatUUID(newItem.uuid, newItem.name, !newItem.isIdentified)\r\n    if (qty > 1) content += ` x${qty}`\r\n\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('giveth.giveth', { target: target.name })}</h4>`,\r\n        content,\r\n        speaker: ChatMessage.getSpeaker({ actor: owner }),\r\n    })\r\n}\r\n", "import { getFlag, setFlag, subLocalize, templatePath } from '../../module'\r\n\r\nconst localize = subLocalize('knowledges.editLore')\r\n\r\nexport class EditLores extends FormApplication {\r\n    get actor() {\r\n        return this.object\r\n    }\r\n\r\n    get id() {\r\n        return `npc-edit-lores-${this.actor.id}`\r\n    }\r\n\r\n    get title() {\r\n        return localize('title', this.actor)\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('knowledges/lores')\r\n    }\r\n\r\n    getData(options) {\r\n        const actor = this.actor\r\n\r\n        return mergeObject(super.getData(options), {\r\n            unspecified: getFlag(actor, 'unspecified') ?? '',\r\n            specific: getFlag(actor, 'specific') ?? '',\r\n            i18n: localize,\r\n        })\r\n    }\r\n\r\n    async _updateObject(event, { unspecified, specific }) {\r\n        const actor = this.object\r\n        setFlag(actor, 'unspecified', unspecified.trim())\r\n        setFlag(actor, 'specific', specific.trim())\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('button.cancel').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    #onCancel(event) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n", "import { EditLores } from '../apps/knowledges/lores'\r\nimport { getFlag, getSetting } from '../module'\r\nimport { createHook } from './shared/hook'\r\n\r\nconst setHook = createHook('renderNPCSheetPF2e', renderNPCSheetPF2e)\r\n\r\nexport function registerKnowledges() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'knowledges',\r\n                type: Boolean,\r\n                default: false,\r\n                onChange: value => setHook(value),\r\n            },\r\n        ],\r\n        conflicts: ['pf2e-npc-knowledges'],\r\n        ready: isGM => {\r\n            if (isGM && getSetting('knowledges')) setHook(true)\r\n        },\r\n    }\r\n}\r\n\r\nfunction renderNPCSheetPF2e(sheet, $html) {\r\n    const actor = sheet.actor\r\n\r\n    replaceLores(actor, $html)\r\n    addEditButton($html)\r\n    addEvents(actor, $html)\r\n}\r\n\r\nfunction knowledgeSelector(html, section, selector) {\r\n    return html.find(\r\n        `[data-tab=\"main\"] .recall-knowledge ${section === 'header' ? '.section-header' : '.section-body'} ${selector}`\r\n    )\r\n}\r\n\r\nfunction editLores(actor) {\r\n    new EditLores(actor).render(true)\r\n}\r\n\r\nfunction replaceLores(actor, html) {\r\n    const unspecifics = getFlag(actor, 'unspecified')\r\n    const specifics = getFlag(actor, 'specific')\r\n    if (!unspecifics && !specifics) return\r\n\r\n    const lores = actor.identificationDCs.lore\r\n    const body = knowledgeSelector(html, 'body', '')\r\n    body.find('.identification-skills').last().remove()\r\n\r\n    function tag(skills, dc, adjustment) {\r\n        const content = game.i18n.format('PF2E.Actor.NPC.Identification.Skills.Label', { skills, dc, adjustment })\r\n        return `<div class=\"tag-legacy identification-skills tooltipstered\">${content}</div>`\r\n    }\r\n\r\n    function addTags(lores, { dc, start }) {\r\n        const tags = lores\r\n            .split(',')\r\n            .filter(lore => lore.trim())\r\n            .map(lore => tag(lore, dc, start))\r\n            .join('')\r\n        body.append(tags)\r\n    }\r\n\r\n    addTags(unspecifics || 'Unspecific', lores[0])\r\n    addTags(specifics || 'Specific', lores[1])\r\n}\r\n\r\nfunction addEvents(actor, html) {\r\n    const edit = knowledgeSelector(html, 'header', 'button.edit')\r\n    edit.on('click', () => editLores(actor))\r\n}\r\n\r\nfunction addEditButton(html) {\r\n    const attempts = knowledgeSelector(html, 'header', 'button')\r\n    const edit = '<button type=\"button\" class=\"breakdown edit\">Edit</button>'\r\n    attempts.before(edit)\r\n}\r\n", "import { subLocalize, templatePath } from '../../module'\r\n\r\nconst localize = subLocalize('merge.multi')\r\n\r\nexport class MultiCast extends Application {\r\n    constructor(spell, options) {\r\n        super(options)\r\n        this._spell = spell\r\n    }\r\n\r\n    get spell() {\r\n        return this._spell\r\n    }\r\n\r\n    get title() {\r\n        return localize('title', this.spell)\r\n    }\r\n\r\n    get template() {\r\n        return templatePath('merge/multi')\r\n    }\r\n\r\n    getData(options) {\r\n        return mergeObject(super.getData(options), {\r\n            i18n: localize,\r\n        })\r\n    }\r\n\r\n    activateListeners(html) {\r\n        html.find('[data-action=cast]').on('click', this.#onCast.bind(this))\r\n        html.find('[data-action=cancel]').on('click', this.#onCancel.bind(this))\r\n    }\r\n\r\n    async #onCast(event) {\r\n        event.preventDefault()\r\n\r\n        const nb = this.element.find('[name=multi]').val()\r\n        if (nb < 1) {\r\n            localize.error('zero')\r\n            this.close()\r\n            return\r\n        }\r\n\r\n        const spell = this.spell\r\n        const damages = deepClone(spell._source.system.damage.value)\r\n        const heightening = deepClone(spell._source.system.heightening) ?? {}\r\n\r\n        for (const [id, damage] of Object.entries(damages)) {\r\n            for (let i = 0; i < nb - 1; i++) {\r\n                const newId = randomID()\r\n\r\n                damages[newId] = damage\r\n\r\n                if (heightening.type === 'interval') {\r\n                    const damage = heightening.damage[id]\r\n                    if (damage) heightening.damage[newId] = damage\r\n                } else if (heightening.type === 'fixed') {\r\n                    for (const [level, data] of Object.entries(heightening.levels)) {\r\n                        const damage = data.damage.value[id]\r\n                        if (damage) heightening.levels[level].damage.value[newId] = damage\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const newSpell = spell.clone({ 'system.damage.value': damages, 'system.heightening': heightening })\r\n        newSpell.rollDamage(event)\r\n\r\n        this.close()\r\n    }\r\n\r\n    #onCancel(event) {\r\n        event.preventDefault()\r\n        this.close()\r\n    }\r\n}\r\n", "import { MultiCast } from '../apps/merge/multi'\r\nimport { MODULE_ID, getFlag, getSetting, localize, templatePath, warn } from '../module'\r\nimport { createHook } from './shared/hook'\r\n\r\nconst FLAVOR_TAGS = /<div class=\"tags\"><span class=\"tag\".+?<\\/div>/gm\r\nconst FLAVOR_MODIFIERS = /<span class=\"tag tag_transparent\">(.+?)<\\/span>/gm\r\nconst FORMULA_STRIP = /(\\[[\\w,]+\\])/\r\n\r\nconst setHook = createHook('renderChatMessage', renderChatMessage, updateMessages)\r\n\r\nexport function registerMerge() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'merge-damage',\r\n                type: Boolean,\r\n                default: false,\r\n                scope: 'client',\r\n                onChange: value => setHook(value, 'multi-cast'),\r\n            },\r\n            {\r\n                name: 'multi-cast',\r\n                type: Boolean,\r\n                default: false,\r\n                scope: 'client',\r\n                onChange: value => setHook(value, 'merge-damage'),\r\n            },\r\n        ],\r\n        init: isGm => {\r\n            setHook(false, ['multi-cast', 'merge-damage'])\r\n        },\r\n    }\r\n}\r\n\r\nfunction updateMessages() {\r\n    const chat = ui.chat?.element\r\n    if (!chat) return\r\n\r\n    for (const message of chatMessages(10)) {\r\n        const html = chat.find(`[data-message-id=${message.id}]`)\r\n        if (!html.length) continue\r\n\r\n        html.find('[data-action=multi-cast]').remove()\r\n        html.find('[data-action=merge-damage]').remove()\r\n\r\n        renderChatMessage(message, html)\r\n    }\r\n}\r\n\r\nfunction renderChatMessage(message, html) {\r\n    if (!game.user.isGM && !message.isAuthor) return\r\n    if (getSetting('merge-damage') && isDamageRoll(message)) renderDamage(message, html)\r\n    else if (getSetting('multi-cast') && message.getFlag('pf2e', 'origin.type') === 'spell') renderSpell(message, html)\r\n}\r\n\r\nfunction renderSpell(message, html) {\r\n    const uuid = message.getFlag('pf2e', 'origin.uuid')\r\n    if (!uuid) return\r\n\r\n    const spellBtn = html.find('.message-content .chat-card .owner-buttons .spell-button')\r\n\r\n    spellBtn\r\n        .find('[data-action=spell-damage]')\r\n        .after(`<button data-action=\"multi-cast\">${localize('merge.spell.button')}</button>`)\r\n\r\n    spellBtn.find('[data-action=multi-cast]').on('click', async event => {\r\n        const spell = await fromUuid(uuid)\r\n        if (spell) new MultiCast(spell).render(true)\r\n    })\r\n}\r\n\r\nfunction renderDamage(message, html) {\r\n    const uuid = getMessageUuid(message)\r\n    if (!uuid) return\r\n\r\n    const tooltip = localize('merge.damage.tooltip')\r\n    const button = `<span style=\"position: absolute; right: 0px; bottom: 1px;\">\r\n    <button data-action=\"merge-damage\" title=\"${tooltip}\" style=\"width: 22px; height: 22px; font-size: 10px; line-height: 1px;\">\r\n        <i class=\"fa-duotone fa-merge\"></i>\r\n    </button>\r\n</span>`\r\n\r\n    const originTarget = getMessageTarget(message)\r\n\r\n    html.find('.dice-result .dice-total').append(button)\r\n    html.find('[data-action=merge-damage]').on('click', event => {\r\n        event.stopPropagation()\r\n\r\n        for (const otherMessage of chatMessages(5, message)) {\r\n            if (\r\n                getMessageUuid(otherMessage) !== uuid ||\r\n                getMessageTarget(otherMessage) !== originTarget ||\r\n                !isDamageRoll(otherMessage)\r\n            )\r\n                continue\r\n\r\n            mergeDamages(event, message, otherMessage)\r\n            return\r\n        }\r\n\r\n        warn('merge.damage.none')\r\n    })\r\n}\r\n\r\nasync function mergeDamages(event, origin, other) {\r\n    const name = getItemName(origin, other)\r\n    const tags = getTags(origin, other)\r\n    const notes = getMessageNotes(other)\r\n    const modifiers = getMessageModifiers(other)\r\n\r\n    const target = getMessageTarget(origin)\r\n    const uuid = getMessageUuid(origin)\r\n\r\n    for (const note of getMessageNotes(origin)) {\r\n        if (!notes.includes(note)) notes.push(note)\r\n    }\r\n\r\n    for (const modifier of getMessageModifiers(origin)) {\r\n        if (!modifiers.includes(modifier)) modifiers.push(modifier)\r\n    }\r\n\r\n    const originRolls = getMessageRolls(origin)\r\n    const otherRolls = getMessageRolls(other)\r\n\r\n    const grouped = []\r\n\r\n    function findGroup(options) {\r\n        return grouped.find(({ options: { flavor, critRule } }) => flavor === options.flavor && critRule === options.critRule)\r\n    }\r\n\r\n    for (const roll of [].concat(otherRolls, originRolls)) {\r\n        const { options, total, terms } = roll\r\n        const term = terms[0]\r\n        const formula = roll.formula.replace(FORMULA_STRIP, '')\r\n        const group = findGroup(options)\r\n\r\n        if (group) {\r\n            group.terms.push(term)\r\n            group.total += total\r\n            group.formulas.push(formula)\r\n        } else {\r\n            grouped.push({\r\n                options,\r\n                formulas: [formula],\r\n                total,\r\n                terms: [term],\r\n            })\r\n        }\r\n    }\r\n\r\n    for (const group of grouped) {\r\n        group.formula = `(${group.formulas.join(' + ')})[${group.options.flavor}]`\r\n        group.term = group.terms.length < 2 ? group.terms[0] : createTermGroup(group.terms)\r\n    }\r\n\r\n    const roll = {\r\n        class: 'DamageRoll',\r\n        options: {},\r\n        dice: [],\r\n        formula: `{${grouped.map(({ formula }) => formula).join(', ')}}`,\r\n        total: grouped.reduce((acc, { total }) => acc + total, 0),\r\n        evaluated: true,\r\n        terms: [\r\n            {\r\n                class: 'InstancePool',\r\n                options: {},\r\n                evaluated: true,\r\n                terms: grouped.map(({ formula }) => formula),\r\n                modifiers: [],\r\n                rolls: grouped.map(({ options, formula, total, term }) => ({\r\n                    class: 'DamageInstance',\r\n                    options,\r\n                    dice: [],\r\n                    formula,\r\n                    total,\r\n                    terms: [term],\r\n                    evaluated: true,\r\n                })),\r\n                results: grouped.map(({ total }) => ({ result: total, active: true })),\r\n            },\r\n        ],\r\n    }\r\n\r\n    ui.chat.element.find(`[data-message-id=${origin.id}], [data-message-id=${other.id}]`).remove()\r\n    await ChatMessage.deleteDocuments([origin.id, other.id])\r\n\r\n    const flavor = await renderTemplate(templatePath('merge/merged'), {\r\n        header: localize('merge.merged.header', { name }),\r\n        tags,\r\n        notes,\r\n        modifiers,\r\n    })\r\n\r\n    await CONFIG.ChatMessage.documentClass.create({\r\n        flavor,\r\n        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\r\n        speaker: origin.speaker,\r\n        flags: {\r\n            [MODULE_ID]: {\r\n                name,\r\n                tags,\r\n                notes,\r\n                modifiers,\r\n                uuid,\r\n                type: 'damage-roll',\r\n                target,\r\n                merged: true,\r\n            },\r\n        },\r\n        rolls: [roll],\r\n    })\r\n}\r\n\r\nfunction createTermGroup(terms) {\r\n    const options = deepClone(terms[0].options)\r\n    terms.map(term => ((term.options = {}), term))\r\n\r\n    return {\r\n        class: 'Grouping',\r\n        options,\r\n        evaluated: true,\r\n        term: {\r\n            class: 'ArithmeticExpression',\r\n            options: {},\r\n            evaluated: true,\r\n            operator: '+',\r\n            operands: [terms.shift(), terms.length > 1 ? createTermGroup(terms) : terms[0]],\r\n        },\r\n    }\r\n}\r\n\r\nfunction* chatMessages(nb, fromMessage) {\r\n    const messages = game.messages.contents\r\n    const start = (fromMessage ? messages.findLastIndex(m => m === fromMessage) : messages.length) - 1\r\n\r\n    for (let i = start; i >= start - nb; i--) {\r\n        const message = messages[i]\r\n        if (!message) return\r\n        yield message\r\n    }\r\n}\r\n\r\nfunction getMessageRolls(message) {\r\n    return getFlag(message, 'rolls') ?? JSON.parse(message._source.rolls[0]).terms[0].rolls\r\n}\r\n\r\nfunction getMessageUuid(message) {\r\n    return getMessageFlag(message, 'origin.uuid', 'uuid')\r\n}\r\n\r\nfunction isDamageRoll(message) {\r\n    return getMessageFlag(message, 'context.type', 'type') === 'damage-roll'\r\n}\r\n\r\nfunction getMessageTarget(message) {\r\n    return getMessageFlag(message, 'context.target.token', 'target')\r\n}\r\n\r\nfunction getItemName(m1, m2) {\r\n    return getFlag(m1, 'name') ?? getFlag(m2, 'name') ?? m1.getFlag('pf2e', 'strike.name') ?? m1.item.name\r\n}\r\n\r\nfunction getTags(m1, m2) {\r\n    return getFlag(m1, 'tags') ?? getFlag(m2, 'tags') ?? m1.flavor.match(FLAVOR_TAGS)?.[0] ?? ''\r\n}\r\n\r\nfunction getMessageNotes(message) {\r\n    return (\r\n        getFlag(message, 'notes') ??\r\n        message\r\n            .getFlag('pf2e', 'context.notes')\r\n            .map(({ title, text }) => `<strong>${game.i18n.localize(title)}</strong> ${game.i18n.localize(text)}`)\r\n    )\r\n}\r\n\r\nfunction getMessageModifiers(message) {\r\n    let modifiers = getFlag(message, 'modifiers')\r\n    if (modifiers) return modifiers\r\n\r\n    modifiers = []\r\n\r\n    let match\r\n    while ((match = FLAVOR_MODIFIERS.exec(message.flavor))) {\r\n        modifiers.push(match[1])\r\n    }\r\n\r\n    return modifiers\r\n}\r\n\r\nfunction getMessageFlag(message, systemFlag, moduleFlag) {\r\n    return message.getFlag('pf2e', systemFlag) ?? getFlag(message, moduleFlag)\r\n}\r\n", "import { getSetting, registerWrapper } from '../module'\r\n\r\nconst ACTOR_PREPARE_EMBEDDED_DOCUMENTS = 'CONFIG.Actor.documentClass.prototype.prepareEmbeddedDocuments'\r\n\r\nexport function registerNobulk() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'nobulk',\r\n                type: Boolean,\r\n                default: false,\r\n                requiresReload: true,\r\n            },\r\n        ],\r\n        init: () => {\r\n            if (!getSetting('nobulk')) return\r\n            registerWrapper(ACTOR_PREPARE_EMBEDDED_DOCUMENTS, actorPrepareEmbeddedDocuments, 'WRAPPER')\r\n        },\r\n    }\r\n}\r\n\r\nfunction actorPrepareEmbeddedDocuments(wrapped, ...args) {\r\n    wrapped(...args)\r\n\r\n    const actor = this\r\n    const InventoryBulk = actor.inventory.bulk.constructor\r\n\r\n    Object.defineProperty(actor.inventory, 'bulk', {\r\n        get() {\r\n            const inventoryBulk = new InventoryBulk(actor)\r\n            inventoryBulk.value = InventoryBulk.computeTotalBulk(\r\n                actor.inventory.filter(i => !i.isInContainer && i.system.equipped.carryType !== 'dropped'),\r\n                actor.size\r\n            )\r\n            return inventoryBulk\r\n        },\r\n    })\r\n}\r\n", "import { getSetting, hasItemWithSourceId, info, refreshCharacterSheets, subLocalize, templatePath } from '../module'\r\nimport { createHook } from './shared/hook'\r\n\r\nconst setSheetHook = createHook('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\nconst setDeleteCombatHook = createHook('deleteCombat', deleteCombat)\r\nconst setDeleteCombatantHook = createHook('deleteCombatant', deleteCombatant)\r\nconst setCreateCombatantHook = createHook('createCombatant', createCombatant)\r\n\r\nconst STANCES = new Map()\r\nconst EFFECTS = new Set()\r\nconst ACTIONS = new Set()\r\n\r\nconst STANCE_SAVANT = ['Compendium.pf2e.feats-srd.Item.yeSyGnYDkl2GUNmu', 'Compendium.pf2e.feats-srd.Item.LI9VtCaL5ZRk0Wo8']\r\n\r\nconst REPLACERS = new Map([\r\n    [\r\n        'Compendium.pf2e.feats-srd.Item.nRjyyDulHnP5OewA', // gorilla pound\r\n\r\n        {\r\n            replace: 'Compendium.pf2e.feats-srd.Item.DqD7htz8Sd1dh3BT', // gorilla stance\r\n            effect: 'Compendium.pf2e.feat-effects.Item.UZKIKLuwpQu47feK',\r\n        },\r\n    ],\r\n])\r\n\r\nconst EXTRAS = [\r\n    {\r\n        uuid: 'Compendium.pf2e.classfeatures.Item.09iL38CZZEa0q0Mt', // arcane cascade\r\n        effect: 'Compendium.pf2e.feat-effects.Item.fsjO5oTKttsbpaKl',\r\n        action: 'Compendium.pf2e.actionspf2e.Item.HbejhIywqIufrmVM',\r\n    },\r\n    {\r\n        uuid: 'Compendium.pf2e.feats-srd.Item.xQuNswWB3eg1UM28', // cobra envenom\r\n        effect: 'Compendium.pf2e.feat-effects.Item.2Qpt0CHuOMeL48rN',\r\n    },\r\n]\r\n\r\nexport function registerStances() {\r\n    return {\r\n        name: 'stances',\r\n        settings: [\r\n            {\r\n                name: 'stances',\r\n                type: Boolean,\r\n                default: false,\r\n                scope: 'client',\r\n                onChange: setup,\r\n            },\r\n            {\r\n                name: 'custom-stances',\r\n                type: String,\r\n                default: '',\r\n                onChange: loadStances,\r\n            },\r\n        ],\r\n        conflicts: ['pf2e-stances'],\r\n        api: { getPackStances, getStances, toggleStance, isValidStance, getActionsUUIDS },\r\n        init: isGm => {},\r\n        ready: isGm => {\r\n            if (getSetting('stances')) setup(true)\r\n        },\r\n    }\r\n}\r\n\r\nfunction setup(value) {\r\n    setSheetHook(value)\r\n    setDeleteCombatHook(value)\r\n    setDeleteCombatantHook(value)\r\n    setCreateCombatantHook(value)\r\n    loadStances()\r\n}\r\n\r\nasync function loadStances() {\r\n    if (!getSetting('stances')) return\r\n\r\n    STANCES.clear()\r\n    EFFECTS.clear()\r\n    ACTIONS.clear()\r\n\r\n    async function addStances(pack) {\r\n        const stances = await getPackStances(pack)\r\n        stances.forEach(stance => {\r\n            if (STANCES.has(stance.uuid)) return\r\n            STANCES.set(stance.uuid, stance)\r\n            ACTIONS.add(stance.uuid)\r\n        })\r\n    }\r\n\r\n    const pack = game.packs.get('pf2e.feats-srd')\r\n    await addStances(pack)\r\n\r\n    EXTRAS.forEach(({ uuid, effect, action }) => {\r\n        const { name } = fromUuidSync(uuid)\r\n        STANCES.set(uuid, { uuid, name, effect, action })\r\n        ACTIONS.add(action ?? uuid)\r\n    })\r\n\r\n    const customStances = getSetting('custom-stances').split(',')\r\n    await Promise.all(\r\n        customStances.map(async custom => {\r\n            const trimmed = custom.trim()\r\n\r\n            const pack = game.packs.get(trimmed)\r\n            if (pack) {\r\n                await addStances(pack)\r\n                return\r\n            }\r\n\r\n            const stance = fromUuidSync(trimmed)\r\n            if (!stance) return\r\n\r\n            const usableUuid = stance.sourceId ?? stance.uuid\r\n            if (!usableUuid || !isValidStance(stance) || STANCES.has(usableUuid)) return\r\n\r\n            STANCES.set(usableUuid, {\r\n                uuid: usableUuid,\r\n                name: stance.name,\r\n                effect: stance.system.selfEffect.uuid,\r\n            })\r\n\r\n            ACTIONS.add(usableUuid)\r\n        })\r\n    )\r\n\r\n    STANCES.forEach(stance => EFFECTS.add(stance.effect))\r\n    REPLACERS.forEach(replacer => EFFECTS.add(replacer.effect))\r\n\r\n    refreshCharacterSheets()\r\n}\r\n\r\nfunction isValidStance(stance) {\r\n    return stance && stance.system.traits.value.includes('stance') && stance.system.selfEffect?.uuid\r\n}\r\n\r\nasync function getPackStances(pack) {\r\n    const index = await pack.getIndex({ fields: ['system.traits', 'system.selfEffect'] })\r\n    return index.filter(isValidStance).map(feat => ({\r\n        name: feat.name,\r\n        uuid: feat.uuid,\r\n        effect: feat.system.selfEffect.uuid,\r\n    }))\r\n}\r\n\r\nasync function getStances(actor) {\r\n    const stances = []\r\n    const replaced = []\r\n    const effects = new Map()\r\n    const actions = new Map()\r\n\r\n    for (const feat of actor.itemTypes.feat) {\r\n        const sourceId = feat.sourceId\r\n\r\n        const replacer = REPLACERS.get(sourceId)\r\n        const stance = STANCES.get(replacer?.replace ?? sourceId)\r\n        if (!stance) continue\r\n\r\n        stances.push({\r\n            name: stance.name,\r\n            uuid: sourceId,\r\n            action: stance.action,\r\n            effectUUID: replacer?.effect ?? stance.effect,\r\n        })\r\n\r\n        if (replacer) replaced.push(replacer.replace)\r\n        if (!actions.has(sourceId)) actions.set(sourceId, feat.id)\r\n    }\r\n\r\n    for (const action of actor.itemTypes.action) {\r\n        const sourceId = action.sourceId\r\n        if (ACTIONS.has(sourceId)) actions.set(sourceId, action.id)\r\n    }\r\n\r\n    for (const effect of actor.itemTypes.effect) {\r\n        const sourceId = effect.sourceId\r\n        if (EFFECTS.has(sourceId)) effects.set(sourceId, effect.id)\r\n    }\r\n\r\n    return Promise.all(\r\n        stances\r\n            .filter(({ uuid }) => !replaced.includes(uuid))\r\n            .map(async ({ effectUUID, name, action, uuid }) => {\r\n                const effect = await fromUuid(effectUUID)\r\n                if (!effect) return\r\n\r\n                return {\r\n                    name,\r\n                    img: effect.img,\r\n                    effectUUID,\r\n                    actionID: actions.get(action ?? uuid),\r\n                    effectID: effects.get(effectUUID),\r\n                }\r\n            })\r\n    ).then(stances => stances.filter(Boolean))\r\n}\r\n\r\nasync function renderCharacterSheetPF2e(sheet, html) {\r\n    const actor = sheet.actor\r\n    const stances = await getStances(actor)\r\n    if (!stances.length) return\r\n\r\n    const inCombat = actor.getActiveTokens(true, true).some(token => token.inCombat)\r\n    const tab = html.find('.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter]')\r\n    const options = tab.find('.actions-options')\r\n    const template = await renderTemplate(templatePath('stances/sheet'), {\r\n        stances,\r\n        canUseStances: inCombat && !actor.isDead,\r\n        i18n: subLocalize('stances'),\r\n    })\r\n\r\n    if (options.length) options.after(template)\r\n    else tab.prepend(template)\r\n\r\n    html.find(\r\n        '.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter] .pf2e-stances .pf2e-stances__stance'\r\n    ).on('click', event => onToggleStance(event, actor))\r\n}\r\n\r\nasync function onToggleStance(event, actor) {\r\n    const target = event.currentTarget\r\n    const canUseStances = target.closest('.pf2e-stances')?.classList.contains('can-use-stances')\r\n    if (!event.ctrlKey && !canUseStances) return\r\n\r\n    const effectUUID = target.dataset.effectUuid\r\n    toggleStance(actor, effectUUID)\r\n}\r\n\r\nasync function toggleStance(actor, effectUUID) {\r\n    const effects = getEffects(actor)\r\n    const already = effects.findIndex(effect => effect.uuid === effectUUID)\r\n\r\n    let create = false\r\n\r\n    if (already < 0) {\r\n        create = true\r\n    } else if (effects.length) {\r\n        const other = effects.filter(effect => effect.uuid !== effectUUID).length\r\n        const more = effects.filter(effect => effect.uuid === effectUUID).length > 1\r\n        if (other || more) effects.splice(already, 1)\r\n    }\r\n\r\n    if (effects.length) {\r\n        await actor.deleteEmbeddedDocuments(\r\n            'Item',\r\n            effects.map(x => x.id)\r\n        )\r\n    }\r\n\r\n    if (create) addStance(actor, effectUUID)\r\n}\r\n\r\nasync function addStance(actor, uuid) {\r\n    const effect = await fromUuid(uuid)\r\n\r\n    if (effect) {\r\n        const obj = effect.toObject()\r\n        if (!getProperty(obj, 'flags.core.sourceId')) setProperty(obj, 'flags.core.sourceId', effect.uuid)\r\n\r\n        const items = await actor.createEmbeddedDocuments('Item', [obj])\r\n        items[0]?.toMessage()\r\n\r\n        return true\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nfunction getEffects(actor) {\r\n    const effects = []\r\n\r\n    for (const effect of actor.itemTypes.effect) {\r\n        const sourceId = effect.sourceId\r\n        if (!sourceId || !EFFECTS.has(sourceId)) continue\r\n        effects.push({ uuid: sourceId, id: effect.id })\r\n    }\r\n\r\n    return effects\r\n}\r\n\r\nfunction deleteCombat(combat) {\r\n    for (const combatant of combat.combatants) {\r\n        deleteCombatant(combatant)\r\n    }\r\n}\r\n\r\nfunction deleteCombatant(combatant) {\r\n    const actor = getActorFromCombatant(combatant)\r\n    if (!actor) return\r\n\r\n    if (game.user.isGM) {\r\n        const effects = getEffects(actor).map(effect => effect.id)\r\n        if (effects.length) actor.deleteEmbeddedDocuments('Item', effects)\r\n    }\r\n\r\n    refreshCharacterSheets(actor)\r\n}\r\n\r\nfunction createCombatant(combatant) {\r\n    const actor = getActorFromCombatant(combatant)\r\n    if (!actor) return\r\n\r\n    if (!game.user.isGM && actor.isOwner) checkForSavant(actor)\r\n\r\n    refreshCharacterSheets(actor)\r\n}\r\n\r\nfunction getActorFromCombatant(combatant) {\r\n    const actor = combatant.actor\r\n    if (actor && !actor.isToken && actor.isOfType('character')) return actor\r\n}\r\n\r\nasync function checkForSavant(actor) {\r\n    if (getEffects(actor).length) return\r\n    if (!hasItemWithSourceId(actor, STANCE_SAVANT, ['feat'])) return\r\n\r\n    const stances = await getStances(actor)\r\n    if (!stances.length) return\r\n\r\n    if (stances.length === 1) {\r\n        const stance = stances[0]\r\n        if (await addStance(actor, stance.effectUUID)) info('stances.useStance', { stance: stance.name })\r\n    } else {\r\n        openStancesMenu(actor, stances)\r\n    }\r\n}\r\n\r\nasync function openStancesMenu(actor, stances) {\r\n    const localize = subLocalize('stances.menu')\r\n\r\n    new Dialog({\r\n        title: localize('title'),\r\n        content: await renderTemplate(templatePath('stances/menu'), { stances, i18n: localize }),\r\n        buttons: {\r\n            yes: {\r\n                icon: '<i class=\"fa-solid fa-people-arrows\"></i>',\r\n                label: localize('accept'),\r\n                callback: html => addStance(actor, html.find('[name=stance]:checked').val()),\r\n            },\r\n            no: {\r\n                icon: '<i class=\"fa-solid fa-xmark\"></i>',\r\n                label: localize('cancel'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n\r\nfunction getActionsUUIDS() {\r\n    return new Set([...ACTIONS, ...Array.from(REPLACERS.keys())])\r\n}\r\n", "import { MODULE_ID, getSetting, localeCompare, refreshCharacterSheets, templatePath } from '../module'\r\nimport { createChoicesHook } from './shared/hook'\r\n\r\nconst setHook = createChoicesHook('renderCharacterSheetPF2e', renderCharacterSheetPF2e, () => refreshCharacterSheets())\r\n\r\nexport function registerSpellsSummary() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'summary',\r\n                type: String,\r\n                default: 'disabled',\r\n                scope: 'client',\r\n                choices: ['disabled', 'enabled', 'sort'],\r\n                onChange: value => setHook(value),\r\n            },\r\n        ],\r\n        conflicts: ['pf2e-spells-summary'],\r\n        init: isGm => {\r\n            if (getSetting('summary') !== 'disabled') setHook(true)\r\n        },\r\n    }\r\n}\r\n\r\nasync function renderCharacterSheetPF2e(sheet, html) {\r\n    const actor = sheet.actor\r\n    if (!actor || actor.pack || !actor.id || !game.actors.has(actor.id)) return\r\n\r\n    const tab = getSpellcastingTab(html)\r\n\r\n    if (getProperty(sheet, `modules.${MODULE_ID}.toggled`)) tab.addClass('toggled')\r\n\r\n    getSpellcastingNav(html).on('click', event => onSpellcastingBtnToggle(event, html, sheet))\r\n    await addSummaryTab(html, sheet, actor)\r\n\r\n    if (tab.hasClass('toggled') && tab.hasClass('active')) {\r\n        sheet._restoreScrollPositions(html)\r\n    }\r\n}\r\n\r\nasync function addSummaryTab(html, sheet, actor) {\r\n    const tab = getSpellcastingTab(html)\r\n    const data = await getData(actor)\r\n\r\n    const template = await renderTemplate(templatePath('summary/sheet'), data)\r\n\r\n    tab.append(template)\r\n    addSummaryEvents(html, sheet, actor)\r\n}\r\n\r\nfunction addSummaryEvents(html, sheet, actor) {\r\n    const summary = getSpellcastingSummarySection(html)\r\n\r\n    const inputs = summary.find('.spell-type .uses .spell-slots-input input')\r\n    inputs.on('change', event => onUsesInputChange(event, actor))\r\n    inputs.on('focus', onUsesInputFocus)\r\n    inputs.on('blur', onUsesInputBlur)\r\n\r\n    summary.find('.cast-spell').on('click', event => onCastSpell(event, actor))\r\n    summary.find('.item-toggle-prepare').on('click', event => onTogglePrepare(event, actor))\r\n    summary.find('.focus-pips').on('click contextmenu', event => onToggleFocusPool(event, actor))\r\n    summary.find('.spell-slots-increment-reset').on('click', event => onSlotsReset(event, sheet, actor))\r\n    summary.find('.item-image').on('click', event => onItemToChat(event, actor))\r\n    summary.find('.item-name > h4').on('click', event => onToggleSummary(event, sheet))\r\n}\r\n\r\nasync function onUsesInputChange(event, actor) {\r\n    event.preventDefault()\r\n\r\n    const { inputPath, entryId } = $(event.currentTarget).data()\r\n    const value = event.currentTarget.valueAsNumber\r\n    actor.updateEmbeddedDocuments('Item', [{ _id: entryId, [inputPath]: value }])\r\n}\r\n\r\nfunction onUsesInputFocus(event) {\r\n    event.preventDefault()\r\n    event.currentTarget.closest('.item')?.classList.add('hover')\r\n}\r\n\r\nfunction onUsesInputBlur(event) {\r\n    event.preventDefault()\r\n    event.currentTarget.closest('.item')?.classList.remove('hover')\r\n}\r\n\r\nfunction onTogglePrepare(event, actor) {\r\n    event.preventDefault()\r\n    const { slotLevel, slotId, entryId, expended } = $(event.currentTarget).closest('.item').data()\r\n    const collection = actor.spellcasting.collections.get(entryId)\r\n    collection?.setSlotExpendedState(slotLevel ?? 0, slotId ?? 0, expended !== true)\r\n}\r\n\r\nfunction onToggleFocusPool(event, actor) {\r\n    event.preventDefault()\r\n    const change = event.type === 'click' ? 1 : -1\r\n    const points = (actor.system.resources.focus?.value ?? 0) + change\r\n    actor.update({ 'system.resources.focus.value': points })\r\n}\r\n\r\nfunction onChargeReset(sheet, entryId) {\r\n    const original = getSpellcastingOriginalSection(sheet.element)\r\n    const entry = original.find(`.item-container.spellcasting-entry[data-item-id=${entryId}]`)\r\n    const btn = entry.find('.spell-ability-data .statistic-values a.pf2e-staves-charge')\r\n    btn[0]?.click()\r\n}\r\n\r\nfunction onSlotsReset(event, sheet, actor) {\r\n    event.preventDefault()\r\n\r\n    const { itemId, level, isCharge } = $(event.currentTarget).data()\r\n    if (!itemId) return\r\n\r\n    if (isCharge) {\r\n        onChargeReset(sheet, itemId)\r\n        return\r\n    }\r\n\r\n    const item = actor.items.get(itemId)\r\n    if (!item) return\r\n\r\n    if (item.isOfType('spellcastingEntry')) {\r\n        const slotLevel = level >= 0 && level <= 11 ? `slot${level}` : 'slot0'\r\n        const slot = item.system.slots?.[slotLevel]\r\n        if (slot) item.update({ [`system.slots.${slotLevel}.value`]: slot.max })\r\n    } else if (item.isOfType('spell')) {\r\n        const max = item.system.location.uses?.max\r\n        if (max) item.update({ 'system.location.uses.value': max })\r\n    }\r\n}\r\n\r\nfunction onCastSpell(event, actor) {\r\n    event.preventDefault()\r\n\r\n    const target = $(event.currentTarget)\r\n    if (target.prop('disabled')) return\r\n\r\n    const { itemId, slotLevel, slotId, entryId } = target.closest('.item').data()\r\n    const collection = actor.spellcasting.collections.get(entryId)\r\n    if (!collection) return\r\n\r\n    const spell = collection.get(itemId)\r\n    if (!spell) return\r\n\r\n    collection.entry.cast(spell, { slot: slotId, level: slotLevel })\r\n}\r\n\r\nasync function onToggleSummary(event, sheet) {\r\n    const item = event.currentTarget.closest('.item')\r\n    await sheet.itemRenderer.toggleSummary(item)\r\n}\r\n\r\nasync function onItemToChat(event, actor) {\r\n    const itemId = $(event.currentTarget).closest('.item').attr('data-item-id')\r\n    const item = actor.items.get(itemId)\r\n    if (!item || (item.isOfType('physical') && !item.isIdentified)) return\r\n    await item.toMessage(event)\r\n}\r\n\r\nfunction onSpellcastingBtnToggle(event, html, sheet) {\r\n    event.preventDefault()\r\n\r\n    const tab = getSpellcastingTab(html)\r\n\r\n    if (tab.hasClass('active')) {\r\n        tab.toggleClass('toggled')\r\n        tab.scrollTop(0)\r\n        setProperty(sheet, `modules.${MODULE_ID}.toggled`, tab.hasClass('toggled'))\r\n    }\r\n}\r\n\r\nfunction getSpellcastingNav(html) {\r\n    return html.find('nav.sheet-navigation .item[data-tab=spellcasting]')\r\n}\r\n\r\nfunction getSpellcastingTab(html) {\r\n    return html.find('section.sheet-body .sheet-content > .tab[data-tab=spellcasting]')\r\n}\r\n\r\nfunction getSpellcastingOriginalSection(html) {\r\n    return getSpellcastingTab(html).find('.directory-list.spellcastingEntry-list')\r\n}\r\n\r\nfunction getSpellcastingSummarySection(html) {\r\n    return getSpellcastingTab(html).find('.directory-list.summary')\r\n}\r\n\r\nasync function getData(actor) {\r\n    const focusPool = actor.system.resources.focus ?? { value: 0, max: 0 }\r\n    const stavesActive = game.modules.get('pf2e-staves')?.active\r\n    const spells = []\r\n    const focuses = []\r\n\r\n    let hasFocusCantrips = false\r\n\r\n    await Promise.all(\r\n        actor.spellcasting.regular.map(async entry => {\r\n            const entryId = entry.id\r\n            const entryDc = entry.statistic.dc.value\r\n            const entryName = entry.name\r\n            const data = await entry.getSheetData()\r\n            const isFocus = data.isFocusPool\r\n            const isCharge = entry.system?.prepared?.value === 'charge'\r\n            const isStaff = getProperty(entry, 'flags.pf2e-staves.staveID') !== undefined\r\n            const charges = { value: getProperty(entry, 'flags.pf2e-staves.charges') ?? 0 }\r\n\r\n            for (const slot of data.levels) {\r\n                if (!slot.active.length || slot.uses?.max === 0) continue\r\n\r\n                const slotSpells = []\r\n                const isCantrip = slot.isCantrip\r\n                const actives = slot.active.filter(x => x && x.uses?.max !== 0)\r\n                const isBroken = !isCantrip && isCharge && !stavesActive\r\n\r\n                for (let slotId = 0; slotId < actives.length; slotId++) {\r\n                    const { spell, expended, virtual, uses, castLevel } = actives[slotId]\r\n\r\n                    slotSpells.push({\r\n                        name: spell.name,\r\n                        img: spell.img,\r\n                        range: spell.system.range.value || '-',\r\n                        castLevel: castLevel ?? spell.level,\r\n                        slotId,\r\n                        entryId,\r\n                        entryDc,\r\n                        entryName,\r\n                        itemId: spell.id,\r\n                        inputId: data.isInnate ? spell.id : data.id,\r\n                        inputPath: isCharge\r\n                            ? 'flags.pf2e-staves.charges'\r\n                            : data.isInnate\r\n                            ? 'system.location.uses.value'\r\n                            : `system.slots.slot${slot.level}.value`,\r\n                        isCharge,\r\n                        isActiveCharge: isCharge && stavesActive,\r\n                        isBroken,\r\n                        isVirtual: virtual,\r\n                        isInnate: data.isInnate,\r\n                        isCantrip: isCantrip,\r\n                        isFocus,\r\n                        isPrepared: data.isPrepared,\r\n                        isSpontaneous: data.isSpontaneous || data.isFlexible,\r\n                        slotLevel: slot.level,\r\n                        uses: uses ?? (isCharge ? charges : slot.uses),\r\n                        expended: expended ?? (isFocus && !isCantrip ? focusPool.value <= 0 : false),\r\n                        action: spell.system.time.value,\r\n                        type: isCharge\r\n                            ? isStaff\r\n                                ? `${MODULE_ID}.summary.staff`\r\n                                : `${MODULE_ID}.summary.charges`\r\n                            : data.isInnate\r\n                            ? 'PF2E.PreparationTypeInnate'\r\n                            : data.isSpontaneous\r\n                            ? 'PF2E.PreparationTypeSpontaneous'\r\n                            : data.isFlexible\r\n                            ? 'PF2E.SpellFlexibleLabel'\r\n                            : isFocus\r\n                            ? 'PF2E.SpellFocusLabel'\r\n                            : 'PF2E.SpellPreparedLabel',\r\n                        order: isCharge ? 0 : data.isPrepared ? 1 : isFocus ? 2 : data.isInnate ? 3 : data.isSpontaneous ? 4 : 5,\r\n                        noHover: data.isPrepared || isCantrip || isBroken || isFocus,\r\n                    })\r\n                }\r\n\r\n                if (slotSpells.length) {\r\n                    if (isFocus) {\r\n                        if (isCantrip) hasFocusCantrips = true\r\n                        else {\r\n                            focuses.push(...slotSpells)\r\n                            continue\r\n                        }\r\n                    }\r\n\r\n                    spells[slot.level] ??= []\r\n                    spells[slot.level].push(...slotSpells)\r\n                }\r\n            }\r\n        })\r\n    )\r\n\r\n    if (spells.length) {\r\n        const sort =\r\n            getSetting('summary') === 'sort'\r\n                ? (a, b) => (a.order === b.order ? localeCompare(a.name, b.name) : a.order - b.order)\r\n                : (a, b) => localeCompare(a.name, b.name)\r\n        spells.forEach(entry => entry.sort(sort))\r\n    }\r\n\r\n    if (focuses.length) {\r\n        focuses.sort((a, b) => localeCompare(a.name, b.name))\r\n        spells[12] = focuses\r\n        hasFocusCantrips = false\r\n    }\r\n\r\n    const ritualData = await actor.spellcasting.ritual?.getSheetData()\r\n    const rituals = ritualData?.levels.flatMap((slot, slotId) =>\r\n        slot.active\r\n            .map(({ spell }) => ({\r\n                name: spell.name,\r\n                img: spell.img,\r\n                slotId,\r\n                itemId: spell.id,\r\n                level: spell.level,\r\n                time: spell.system.time.value,\r\n            }))\r\n            .filter(Boolean)\r\n    )\r\n\r\n    return {\r\n        spells,\r\n        rituals,\r\n        focusPool,\r\n        stavesActive,\r\n        hasFocusCantrips,\r\n        isOwner: actor.isOwner,\r\n    }\r\n}\r\n", "import { getSetting } from '../module'\r\n\r\nlet CREATE_HOOK = null\r\nlet UPDATE_HOOK = null\r\n\r\nexport function registerUnided() {\r\n    return {\r\n        settings: [\r\n            {\r\n                name: 'unided',\r\n                type: String,\r\n                default: 'disabled',\r\n                choices: ['disabled', 'create', 'all'],\r\n                onChange: setHooks,\r\n            },\r\n        ],\r\n        conflicts: ['pf2e-unided'],\r\n        init: () => {\r\n            setHooks()\r\n        },\r\n    }\r\n}\r\n\r\nfunction setHooks(value) {\r\n    value ??= getSetting('unided')\r\n\r\n    if (value === 'disabled') {\r\n        if (CREATE_HOOK) {\r\n            Hooks.off('preCreateItem', CREATE_HOOK)\r\n            CREATE_HOOK = null\r\n        }\r\n        if (UPDATE_HOOK) {\r\n            Hooks.off('preUpdateItem', UPDATE_HOOK)\r\n            UPDATE_HOOK = null\r\n        }\r\n    } else {\r\n        if (!CREATE_HOOK) {\r\n            CREATE_HOOK = Hooks.on('preCreateItem', preCreateItem)\r\n        }\r\n        if (value === 'all' && !UPDATE_HOOK) {\r\n            UPDATE_HOOK = Hooks.on('preUpdateItem', preUpdateItem)\r\n        } else if (value !== 'all' && UPDATE_HOOK) {\r\n            Hooks.off('preUpdateItem', UPDATE_HOOK)\r\n            UPDATE_HOOK = null\r\n        }\r\n    }\r\n}\r\n\r\nfunction preCreateItem(item) {\r\n    if (!item.img || !item.isOfType('physical')) return\r\n    item._source.system.identification.unidentified.img = item.img\r\n}\r\n\r\nfunction preUpdateItem(item, changes) {\r\n    if (!item.isOfType('physical') || !('img' in changes)) return\r\n    setProperty(changes, 'system.identification.unidentified.img', changes.img)\r\n}\r\n", "import { getHeroActions, sendTradeRequest } from '../../features/hero'\r\nimport { getCharacterOwner, getOwner, subLocalize, templatePath } from '../../module'\r\n\r\nconst localize = subLocalize('hero.templates.trade')\r\n\r\nexport class Trade extends Application {\r\n    constructor(actor) {\r\n        super({ id: `pf2e-hero-actions-trade-${actor.id}` })\r\n        this._actor = actor\r\n    }\r\n\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            title: localize('title'),\r\n            template: templatePath('hero/trade'),\r\n            width: 600,\r\n            height: 'auto',\r\n        })\r\n    }\r\n\r\n    get actor() {\r\n        return this._actor\r\n    }\r\n\r\n    get target() {\r\n        return this._target\r\n    }\r\n\r\n    set target(value) {\r\n        if (!value) {\r\n            localize.error('no-target')\r\n            return\r\n        }\r\n        if (value === this._target) return\r\n        delete this.target?.apps?.[this.appId]\r\n        this._target = value\r\n        this.render()\r\n    }\r\n\r\n    getData(options) {\r\n        return mergeObject(super.getData(), {\r\n            actor: this.actor,\r\n            target: this.target,\r\n            targets: game.actors.filter(x => x.type === 'character' && x.id !== this.actor.id && x.hasPlayerOwner),\r\n            actions: getHeroActions(this.actor),\r\n            targetActions: this.target ? getHeroActions(this.target) : [],\r\n            i18n: localize,\r\n        })\r\n    }\r\n\r\n    activateListeners(html) {\r\n        super.activateListeners(html)\r\n        html.find('select[name=\"target\"]').on('change', this.#onChangeTarget.bind(this))\r\n        html.find('[data-action=\"description\"]').on('click', this.#onDescription.bind(this))\r\n        html.find('[data-action=\"trade\"]').on('click', this.#onSendTrade.bind(this))\r\n        html.find('[data-action=\"cancel\"]').on('click', () => this.close())\r\n    }\r\n\r\n    render(force, options) {\r\n        this.actor.apps[this.appId] = this\r\n        if (this.target) this.target.apps[this.appId] = this\r\n        return super.render(force, options)\r\n    }\r\n\r\n    async close(options) {\r\n        await super.close(options)\r\n        delete this.actor.apps?.[this.appId]\r\n        delete this.target?.apps?.[this.appId]\r\n    }\r\n\r\n    #onSendTrade() {\r\n        if (!this.target) {\r\n            localize.warn('no-target')\r\n            return\r\n        }\r\n\r\n        const action = this.element.find('[name=\"action\"]:checked').val()\r\n        const target = this.element.find('[name=\"targetAction\"]:checked').val()\r\n\r\n        if (typeof action !== 'string' || typeof target !== 'string') {\r\n            localize.warn('no-select')\r\n            return\r\n        }\r\n\r\n        console.log(getCharacterOwner(this.target, true), getOwner(this.target, true))\r\n        let user = getCharacterOwner(this.target, true) ?? getOwner(this.target, true) ?? game.users.activeGM\r\n        if (!user) {\r\n            localize.warn('no-user')\r\n            return\r\n        }\r\n\r\n        sendTradeRequest({\r\n            sender: {\r\n                id: game.user.id,\r\n                cid: this.actor.id,\r\n                uuid: action,\r\n            },\r\n            receiver: {\r\n                id: user.id,\r\n                cid: this.target.id,\r\n                uuid: target,\r\n            },\r\n        })\r\n\r\n        this.close()\r\n    }\r\n\r\n    async #onDescription(event) {\r\n        const uuid = $(event.currentTarget).siblings('input').val()\r\n        const entry = await fromUuid(uuid)\r\n        entry?.sheet.render(true)\r\n    }\r\n\r\n    #onChangeTarget(event) {\r\n        const id = event.currentTarget.value\r\n        this.target = game.actors.get(id)\r\n    }\r\n}\r\n", "import { Trade } from '../apps/hero/trade'\r\nimport {\r\n    chatUUID,\r\n    documentUuidFromTableResult,\r\n    error,\r\n    getSetting,\r\n    isActiveGM,\r\n    localize,\r\n    refreshCharacterSheets,\r\n    setSetting,\r\n    socketEmit,\r\n    socketOff,\r\n    socketOn,\r\n    subLocalize,\r\n    templatePath,\r\n    warn,\r\n} from '../module'\r\nimport { createHook } from './shared/hook'\r\n\r\nconst MODULE_ID = 'pf2e-hero-actions'\r\n\r\nconst SOCKET = null\r\nconst setHook = createHook('renderCharacterSheetPF2e', renderCharacterSheetPF2e, setupSocket)\r\n\r\nconst JOURNAL_UUID = 'Compendium.pf2e.journals.JournalEntry.BSp4LUSaOmUyjBko'\r\nconst TABLE_UUID = 'Compendium.pf2e.rollable-tables.RollTable.zgZoI7h0XjjJrrNK'\r\n\r\nconst TABLE_ICON = 'systems/pf2e/icons/features/feats/heroic-recovery.webp'\r\n\r\nexport function registerHeroActions() {\r\n    return {\r\n        name: 'heroActions',\r\n        settings: [\r\n            {\r\n                name: 'hero',\r\n                type: Boolean,\r\n                default: false,\r\n                onChange: value => setHook(value),\r\n            },\r\n            {\r\n                name: 'hero-table',\r\n                type: String,\r\n                default: '',\r\n            },\r\n            {\r\n                name: 'hero-trade',\r\n                type: Boolean,\r\n                default: false,\r\n                onChange: () => refreshCharacterSheets(),\r\n            },\r\n            {\r\n                name: 'hero-private',\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n        ],\r\n        conflicts: [MODULE_ID],\r\n        api: {\r\n            createTable,\r\n            removeHeroActions,\r\n            getHeroActions,\r\n            useHeroAction,\r\n            getHeroActionDetails,\r\n            drawHeroAction,\r\n            drawHeroActions,\r\n            sendActionToChat,\r\n            discardHeroActions,\r\n            tradeHeroAction,\r\n        },\r\n        ready: isGM => {\r\n            setHook(false, 'hero')\r\n        },\r\n    }\r\n}\r\n\r\nfunction setupSocket(value) {\r\n    if (value && !SOCKET) socketOn(onSocket)\r\n    else if (!value && SOCKET) socketOff(onSocket)\r\n}\r\n\r\nfunction onSocket(packet) {\r\n    switch (packet.type) {\r\n        case 'trade-reject':\r\n            if (packet.sender.id !== game.user.id) return\r\n            onTradeRejected(packet)\r\n            break\r\n        case 'trade-accept':\r\n            if (!isActiveGM()) return\r\n            onTradeAccepted(packet)\r\n            break\r\n        case 'trade-request':\r\n            if (packet.receiver.id !== game.user.id) return\r\n            onTradeRequest(packet)\r\n            break\r\n        case 'trade-error':\r\n            if (!packet.users.includes(game.user.id)) return\r\n            onTradeError(packet.error)\r\n            break\r\n    }\r\n}\r\n\r\nasync function renderCharacterSheetPF2e(sheet, html) {\r\n    const actor = sheet.actor\r\n    if (!actor || actor.pack || !actor.id || !game.actors.has(actor.id)) return\r\n\r\n    await addActionsToSheet(html, actor)\r\n    addSheetEvents(html, actor)\r\n}\r\n\r\nasync function addActionsToSheet(html, actor) {\r\n    const actions = getHeroActions(actor)\r\n    const diff = actor.heroPoints.value - actions.length\r\n    const isOwner = actor.isOwner\r\n    const localize = subLocalize('hero.templates.heroActions')\r\n\r\n    const template = await renderTemplate(templatePath('hero/sheet'), {\r\n        owner: isOwner,\r\n        list: actions,\r\n        canUse: diff >= 0 && isOwner,\r\n        canDraw: diff > 0 && isOwner,\r\n        canTrade: getSetting('hero-trade'),\r\n        mustDiscard: diff < 0,\r\n        diff: Math.abs(diff),\r\n        i18n: (key, { hash }) => localize(key, hash),\r\n    })\r\n\r\n    html.find(\r\n        '.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter] > .strikes-list:not(.skill-action-list)'\r\n    )\r\n        .first()\r\n        .after(template)\r\n}\r\n\r\nfunction addSheetEvents(html, actor) {\r\n    const list = html.find('.tab.actions .heroActions-list')\r\n    list.find('[data-action=draw]').on('click', event => onClickHeroActionsDraw(actor, event))\r\n    list.find('[data-action=expand]').on('click', onClickHeroActionExpand)\r\n    list.find('[data-action=use]').on('click', event => onClickHeroActionUse(actor, event))\r\n    list.find('[data-action=display]').on('click', event => onClickHeroActionDisplay(actor, event))\r\n    list.find('[data-action=discard]').on('click', onClickHeroActionDiscard)\r\n    list.find('[data-action=discard-selected]').on('click', () => onClickHeroActionsDiscard(actor, html))\r\n    html.find('[data-action=hero-actions-trade]').on('click', () => tradeHeroAction(actor))\r\n}\r\n\r\nasync function onClickHeroActionsDiscard(actor, html) {\r\n    const discarded = html.find('.tab.actions .heroActions-list .action.discarded')\r\n    const uuids = discarded.toArray().map(x => x.dataset.uuid)\r\n    discardHeroActions(actor, uuids)\r\n}\r\n\r\nfunction onClickHeroActionDiscard(event) {\r\n    event.preventDefault()\r\n\r\n    const action = $(event.currentTarget).closest('.action')\r\n    const list = action.closest('.heroActions-list')\r\n\r\n    action.toggleClass('discarded')\r\n\r\n    const toDiscard = Number(list.attr('data-discard') ?? '0')\r\n    const $discarded = list.find('.action.discarded')\r\n\r\n    list.toggleClass('discardable', $discarded.length === toDiscard)\r\n}\r\n\r\nasync function onClickHeroActionDisplay(actor, event) {\r\n    event.preventDefault()\r\n    const uuid = $(event.currentTarget).closest('.action').attr('data-uuid')\r\n    sendActionToChat(actor, uuid)\r\n}\r\n\r\nasync function onClickHeroActionUse(actor, event) {\r\n    event.preventDefault()\r\n    const uuid = $(event.currentTarget).closest('.action').attr('data-uuid')\r\n    useHeroAction(actor, uuid)\r\n}\r\n\r\nasync function onClickHeroActionsDraw(actor, event) {\r\n    event.preventDefault()\r\n    drawHeroActions(actor)\r\n}\r\n\r\nexport function getHeroActions(actor) {\r\n    return getProperty(actor, `flags.${MODULE_ID}.heroActions`) ?? []\r\n}\r\n\r\nfunction setHeroActions(actor, actions) {\r\n    return actor.update({ [`flags.${MODULE_ID}.heroActions`]: actions })\r\n}\r\n\r\nasync function onClickHeroActionExpand(event) {\r\n    event.preventDefault()\r\n\r\n    const action = $(event.currentTarget).closest('.action')\r\n    const summary = action.find('.item-summary')\r\n\r\n    if (!summary.hasClass('loaded')) {\r\n        const uuid = action.attr('data-uuid')\r\n        const details = await getHeroActionDetails(uuid)\r\n        if (!details) return\r\n\r\n        const text = await TextEditor.enrichHTML(details.description, { async: true })\r\n\r\n        summary.find('.item-description').html(text)\r\n        summary.addClass('loaded')\r\n    }\r\n\r\n    action.toggleClass('expanded')\r\n}\r\n\r\nasync function getHeroActionDetails(uuid) {\r\n    let document = await fromUuid(uuid)\r\n    if (!document) return undefined\r\n\r\n    const parent = document instanceof JournalEntry ? document : document.parent\r\n    const page = document instanceof JournalEntry ? document.pages.contents[0] : document\r\n\r\n    let text = page?.text.content\r\n    if (!text) return undefined\r\n\r\n    if (parent.uuid === JOURNAL_UUID) text = text.replace(/^<p>/, '<p><strong>Trigger</strong> ')\r\n    return { name: page.name, description: text }\r\n}\r\n\r\nexport async function drawHeroActions(actor) {\r\n    const actions = getHeroActions(actor)\r\n    const nb = actor.heroPoints.value - actions.length\r\n\r\n    const drawn = []\r\n    for (let i = 0; i < nb; i++) {\r\n        const action = await drawHeroAction()\r\n\r\n        if (action === undefined) continue\r\n        else if (action === null) return\r\n\r\n        actions.push(action)\r\n        drawn.push(action)\r\n    }\r\n\r\n    if (!drawn.length) return\r\n\r\n    setHeroActions(actor, actions)\r\n\r\n    const { content, size } = chatActions(drawn)\r\n    const data = {\r\n        flavor: `<h4 class=\"action\">${localize('hero.actions-draw.header', { nb: size })}</h4>`,\r\n        content,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n    }\r\n\r\n    if (getSetting('hero-private')) {\r\n        data.type = CONST.CHAT_MESSAGE_TYPES.ROLL\r\n        data.rollMode = CONST.DICE_ROLL_MODES.PRIVATE\r\n    }\r\n\r\n    ChatMessage.create(data)\r\n}\r\n\r\nfunction chatActions(actions) {\r\n    const links = actions.map(({ uuid, name }) => chatUUID(uuid, name))\r\n    return {\r\n        content: links.map(x => `<div style=\"line-height: 1.6;\">${x}</div>`).join(''),\r\n        size: links.length,\r\n    }\r\n}\r\n\r\nfunction tradeHeroAction(actor) {\r\n    const actions = getHeroActions(actor)\r\n    if (!actions || !actions.length) {\r\n        warn('hero.no-action')\r\n        return\r\n    }\r\n\r\n    const diff = actions.length - actor.heroPoints.value\r\n    if (diff > 0) {\r\n        warn('hero.no-points', { nb: diff.toString() })\r\n        return\r\n    }\r\n\r\n    new Trade(actor).render(true)\r\n}\r\n\r\nasync function drawHeroAction() {\r\n    const table = await getDeckTable()\r\n    const localize = subLocalize('hero.table')\r\n\r\n    if (!table) {\r\n        localize.error('drawError', true)\r\n        return null\r\n    }\r\n\r\n    if (!table.formula) {\r\n        if (game.user.isGM) {\r\n            if (table.compendium) {\r\n                localize.error('noFormulaCompendium', true)\r\n                return null\r\n            }\r\n            await table.normalize()\r\n        } else {\r\n            localize.error('noFormula', true)\r\n            return null\r\n        }\r\n    }\r\n\r\n    if (table.replacement === false) {\r\n        const notDrawn = table.results.some(r => !r.drawn)\r\n        if (!notDrawn) await table.resetResults()\r\n    }\r\n\r\n    const draw = (await table.draw({ displayChat: false })).results[0]\r\n    if (!draw) return\r\n\r\n    const uuid = documentUuidFromTableResult(draw)\r\n    if (uuid) return { uuid, name: await getLabelfromTableResult(draw, uuid) }\r\n}\r\n\r\nasync function useHeroAction(actor, uuid) {\r\n    const points = actor.heroPoints.value\r\n    if (points < 1) return warn('hero.use.noPoints')\r\n\r\n    const actions = getHeroActions(actor)\r\n\r\n    const index = actions.findIndex(x => x.uuid === uuid)\r\n    if (index === -1) return\r\n\r\n    const details = await getHeroActionDetails(uuid)\r\n    if (!details) error('hero.use.noDetails')\r\n\r\n    actions.splice(index, 1)\r\n\r\n    if (details) {\r\n        actor.update({\r\n            ['system.resources.heroPoints.value']: points - 1,\r\n            [`flags.${MODULE_ID}.heroActions`]: actions,\r\n        })\r\n\r\n        ChatMessage.create({\r\n            flavor: `<h4 class=\"action\">${localize('hero.actions-use.header')}</h4>`,\r\n            content: `<h2>${details.name}</h2>${details.description}`,\r\n            speaker: ChatMessage.getSpeaker({ actor }),\r\n        })\r\n    } else {\r\n        setHeroActions(actor, actions)\r\n    }\r\n}\r\n\r\nasync function discardHeroActions(actor, uuids) {\r\n    uuids = typeof uuids === 'string' ? [uuids] : uuids\r\n\r\n    const actions = getHeroActions(actor)\r\n    const removed = []\r\n\r\n    for (const uuid of uuids) {\r\n        const index = actions.findIndex(x => x.uuid === uuid)\r\n        if (index === -1) continue\r\n        removed.push(actions[index])\r\n        actions.splice(index, 1)\r\n    }\r\n\r\n    setHeroActions(actor, actions)\r\n\r\n    const { content, size } = chatActions(removed)\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('hero.actions-discard.header', { nb: size })}</h4>`,\r\n        content,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n    })\r\n}\r\n\r\nasync function getLabelfromTableResult(result, uuid) {\r\n    if (result.type !== CONST.TABLE_RESULT_TYPES.TEXT) return result.text\r\n    const label = /@UUID\\[[\\w\\.]+\\]{([\\w -]+)}/.exec(result.text)?.[1]\r\n    return label ?? (uuid && (await fromUuid(uuid))?.name)\r\n}\r\n\r\nasync function getTableFromUuid(uuid) {\r\n    if (!uuid) return undefined\r\n    const table = await fromUuid(uuid)\r\n    return table && table instanceof RollTable ? table : undefined\r\n}\r\n\r\nasync function getDefaultCompendiumTable() {\r\n    return getTableFromUuid(TABLE_UUID)\r\n}\r\n\r\nfunction getDefaultWorldTable() {\r\n    return game.tables.find(x => x.getFlag('core', 'sourceId') === TABLE_UUID)\r\n}\r\n\r\nasync function getCustomTable() {\r\n    return getTableFromUuid(getSetting('hero-table'))\r\n}\r\n\r\nasync function getDeckTable() {\r\n    return (await getCustomTable()) ?? getDefaultWorldTable() ?? (await getDefaultCompendiumTable())\r\n}\r\n\r\nasync function sendActionToChat(actor, uuid) {\r\n    const details = await getHeroActionDetails(uuid)\r\n    if (!details) return error('hero.details.missing')\r\n\r\n    ChatMessage.create({\r\n        content: `<h2>${details.name}</h2>${details.description}`,\r\n        speaker: ChatMessage.getSpeaker({ actor: actor }),\r\n    })\r\n}\r\n\r\nexport function sendTradeRequest(trade) {\r\n    if (trade.receiver.id === game.user.id) {\r\n        acceptRequest(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit({\r\n        ...trade,\r\n        type: 'trade-request',\r\n    })\r\n}\r\n\r\nfunction acceptRequest(trade) {\r\n    if (game.user.isGM) {\r\n        onTradeAccepted(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit({\r\n        ...trade,\r\n        type: 'trade-accept',\r\n    })\r\n}\r\n\r\nasync function onTradeAccepted(trade) {\r\n    const { sender, receiver } = trade\r\n    const senderActor = game.actors.get(sender.cid)\r\n    const receiverActor = game.actors.get(receiver.cid)\r\n\r\n    if (!senderActor || !receiverActor) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    const senderActions = getHeroActions(senderActor)\r\n    const receiverActions = getHeroActions(receiverActor)\r\n\r\n    const senderActionIndex = senderActions.findIndex(x => x.uuid === sender.uuid)\r\n    const receiverActionIndex = receiverActions.findIndex(x => x.uuid === receiver.uuid)\r\n\r\n    if (senderActionIndex === -1 || receiverActionIndex === -1) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    const senderAction = senderActions.splice(senderActionIndex, 1)[0]\r\n    const receiverAction = receiverActions.splice(receiverActionIndex, 1)[0]\r\n\r\n    senderActions.push(receiverAction)\r\n    receiverActions.push(senderAction)\r\n\r\n    setHeroActions(senderActor, senderActions)\r\n    setHeroActions(receiverActor, receiverActions)\r\n\r\n    const sentLink = chatUUID(senderAction.uuid)\r\n    const receivedLink = chatUUID(receiverAction.uuid)\r\n\r\n    const localize = subLocalize('hero.trade-success')\r\n\r\n    let content = `<div style=\"line-height: 1.6\">${localize('offer', { offer: sentLink })}</div>`\r\n    content += `<div style=\"line-height: 1.6\">${localize('receive', { receive: receivedLink })}</div>`\r\n\r\n    console.log('content')\r\n\r\n    ChatMessage.create({\r\n        flavor: `<h4 class=\"action\">${localize('header', { name: receiverActor.name })}</h4>`,\r\n        content,\r\n        speaker: ChatMessage.getSpeaker({ actor: senderActor }),\r\n    })\r\n}\r\n\r\nfunction sendTradeError({ sender, receiver }, error = 'trade-error') {\r\n    const users = new Set([sender.id, receiver.id])\r\n\r\n    if (users.has(game.user.id)) {\r\n        users.delete(game.user.id)\r\n        onTradeError(error)\r\n    }\r\n\r\n    if (!users.size) return\r\n\r\n    socketEmit({\r\n        type: 'trade-error',\r\n        users: Array.from(users),\r\n        error,\r\n    })\r\n}\r\n\r\nfunction onTradeError(err) {\r\n    error('hero.trade-error')\r\n}\r\n\r\nasync function onTradeRequest(trade) {\r\n    const { sender, receiver } = trade\r\n    const senderActor = game.actors.get(sender.cid)\r\n    const receiverActor = game.actors.get(receiver.cid)\r\n\r\n    if (!senderActor || !receiverActor) {\r\n        sendTradeError(trade)\r\n        return\r\n    }\r\n\r\n    const localize = subLocalize('hero.trade-request')\r\n\r\n    let content = `<p>${localize('header', { sender: senderActor.name, receiver: receiverActor.name })}</p>`\r\n    content += `<p>${localize('give', { give: chatUUID(sender.uuid) })}</p>`\r\n    content += `<p>${localize('want', { want: chatUUID(receiver.uuid) })}</p>`\r\n    content += `<p style=\"margin-bottom: 1em;\">${localize('accept')}</p>`\r\n\r\n    const accept = await Dialog.confirm({\r\n        title: localize('title'),\r\n        content: await TextEditor.enrichHTML(content, { async: true }),\r\n    })\r\n\r\n    if (accept) acceptRequest(trade)\r\n    else rejectRequest(trade)\r\n}\r\n\r\nfunction rejectRequest(trade) {\r\n    if (trade.sender.id === game.user.id) {\r\n        onTradeRejected(trade)\r\n        return\r\n    }\r\n\r\n    socketEmit({\r\n        ...trade,\r\n        type: 'trade-reject',\r\n    })\r\n}\r\n\r\nasync function onTradeRejected({ receiver }) {\r\n    const actor = game.actors.get(receiver.cid)\r\n    warn('hero.trade-rejected', { name: actor.name }, true)\r\n}\r\n\r\nasync function createTable() {\r\n    const localize = subLocalize('hero.templates.createTable.choice')\r\n    const template = templatePath('hero/dialogs/create-table')\r\n\r\n    const buttons = {\r\n        yes: {\r\n            label: localize('create'),\r\n            icon: '<i class=\"fas fa-border-all\"></i>',\r\n            callback: html => {\r\n                const type = html.find('.window-content input[name=\"type\"]:checked').val()\r\n                const unique = html.find('.window-content input[name=\"draw\"]:checked').val() === 'unique'\r\n                return { type, unique }\r\n            },\r\n        },\r\n        no: {\r\n            label: localize('cancel'),\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            callback: () => null,\r\n        },\r\n    }\r\n\r\n    const data = {\r\n        content: await renderTemplate(template, { i18n: localize }),\r\n        title: localize('title'),\r\n        buttons,\r\n        default: 'yes',\r\n        close: () => null,\r\n    }\r\n\r\n    const result = await Dialog.wait(data, undefined, { id: 'pf2e-hero-actions-create-table' })\r\n    if (!result) return\r\n\r\n    if (result.type === 'default') createDefaultTable(result.unique)\r\n    else createCustomTable(result.unique)\r\n}\r\n\r\nasync function createCustomTable(unique) {\r\n    const table = await createCustomActionsTable(unique)\r\n    await setTable(table)\r\n    table.sheet?.render(true)\r\n}\r\n\r\nfunction createCustomActionsTable(unique = true) {\r\n    const source = getTableSource(unique)\r\n    return RollTable.create(source, { temporary: false })\r\n}\r\n\r\nasync function createDefaultTable(unique) {\r\n    const localize = subLocalize('templates.createTable.default.confirm')\r\n    let table = await getDefaultWorldTable()\r\n\r\n    if (table) {\r\n        const override = await Dialog.confirm({\r\n            title: localize('title'),\r\n            content: localize('content'),\r\n        })\r\n\r\n        if (override) {\r\n            const update = getTableSource(unique)\r\n            await table.update(update)\r\n            return setTable(table, true)\r\n        }\r\n    }\r\n\r\n    table = await createDefautActionsTable(unique)\r\n    await setTable(table)\r\n}\r\n\r\nasync function createDefautActionsTable(unique = true) {\r\n    const table = await fromUuid(TABLE_UUID)\r\n    const source = getTableSource(unique, table)\r\n    return RollTable.create(source, { temporary: false })\r\n}\r\n\r\nasync function setTable(table, normalize = false) {\r\n    if (normalize) await table.normalize()\r\n    await setSetting('hero-table', table.uuid)\r\n}\r\n\r\nfunction getTableSource(unique = true, table) {\r\n    const source = {\r\n        name: localize('hero.table.name'),\r\n        replacement: !unique,\r\n        img: TABLE_ICON,\r\n        description: localize('hero.table.description'),\r\n        flags: {\r\n            core: {\r\n                sourceId: TABLE_UUID,\r\n            },\r\n        },\r\n    }\r\n    if (!table) return source\r\n    return mergeObject(deepClone(table._source), source)\r\n}\r\n\r\nasync function removeHeroActions() {\r\n    const localize = subLocalize('hero.templates.removeActions')\r\n    const template = templatePath('hero/dialogs/remove-actions')\r\n\r\n    const buttons = {\r\n        yes: {\r\n            label: localize('remove'),\r\n            icon: '<i class=\"fas fa-trash\"></i>',\r\n            callback: html =>\r\n                html\r\n                    .find('input[name=\"actor\"]:checked')\r\n                    .toArray()\r\n                    .map(x => game.actors.get(x.value))\r\n                    .filter(x => x),\r\n        },\r\n        no: {\r\n            label: localize('cancel'),\r\n            icon: '<i class=\"fas fa-times\"></i>',\r\n            callback: () => [],\r\n        },\r\n    }\r\n\r\n    const data = {\r\n        content: await renderTemplate(template, {\r\n            actors: game.actors.filter(x => x.type === 'character'),\r\n            i18n: localize,\r\n        }),\r\n        title: localize('title'),\r\n        buttons,\r\n        default: 'yes',\r\n        render: html => {\r\n            html.on('change', 'input[name=\"all\"]', () => removeActionsToggleAll(html))\r\n            html.on('change', 'input[name=\"actor\"]', () => removeActionsToggleActor(html))\r\n        },\r\n        close: () => [],\r\n    }\r\n\r\n    const actors = await Dialog.wait(data, undefined, { id: 'pf2e-hero-actions-remove-actions' })\r\n    if (!actors.length) {\r\n        localize.warn('noSelection')\r\n        return\r\n    }\r\n\r\n    for (const actor of actors) {\r\n        setHeroActions(actor, [])\r\n    }\r\n\r\n    localize.info('removed')\r\n}\r\n\r\nfunction removeActionsToggleAll(html) {\r\n    const state = html.find('input[name=\"all\"]')[0].checked\r\n    html.find('input[name=\"actor\"]').prop('checked', state)\r\n}\r\n\r\nfunction removeActionsToggleActor(html) {\r\n    const actors = html.find('input[name=\"actor\"]')\r\n    const checked = actors.filter(':checked')\r\n    const all = html.find('input[name=\"all\"]')\r\n\r\n    if (actors.length === checked.length) {\r\n        all.prop('checked', true).prop('indeterminate', false)\r\n        actors.prop('checked', true)\r\n    } else if (!checked.length) {\r\n        all.prop('checked', false).prop('indeterminate', false)\r\n        actors.prop('checked', false)\r\n    } else {\r\n        all.prop('checked', false).prop('indeterminate', true)\r\n    }\r\n}\r\n", "import { MODULE_ID, localize, warn } from './module'\r\nimport { registerArp } from './features/arp'\r\nimport { registerEffectsPanelHelper } from './features/effects'\r\nimport { registerGiveth } from './features/giveth'\r\nimport { registerKnowledges } from './features/knowledges'\r\nimport { registerMerge } from './features/merge'\r\nimport { registerNobulk } from './features/nobulk'\r\nimport { registerStances } from './features/stances'\r\nimport { registerSpellsSummary } from './features/summary'\r\nimport { registerUnided } from './features/unided'\r\nimport { registerHeroActions } from './features/hero'\r\n\r\nconst FEATURES = [\r\n    registerArp(),\r\n    registerNobulk(),\r\n    registerGiveth(),\r\n    registerKnowledges(),\r\n    registerUnided(),\r\n    registerMerge(),\r\n    registerEffectsPanelHelper(),\r\n    registerSpellsSummary(),\r\n    registerStances(),\r\n    registerHeroActions(),\r\n]\r\n\r\nconst CONFLICTS = new Set()\r\n\r\nlet firstClientSetting = null\r\n\r\nHooks.once('init', () => {\r\n    const user = game.data.users.find(x => x._id === game.data.userId)\r\n    const isGM = user && user.role >= CONST.USER_ROLES.GAMEMASTER\r\n\r\n    const settings = FEATURES.flatMap(({ settings = [] }) =>\r\n        settings.map(setting => {\r\n            const key = setting.name\r\n\r\n            if (setting.choices) {\r\n                setting.choices = setting.choices.reduce((choices, choice) => {\r\n                    choices[choice] = settingPath(key, `choices.${choice}`)\r\n                    return choices\r\n                }, {})\r\n            }\r\n\r\n            setting.key = key\r\n            setting.scope ??= 'world'\r\n            setting.config ??= true\r\n            setting.name = settingPath(key, 'name')\r\n            setting.hint = settingPath(key, 'hint')\r\n\r\n            return setting\r\n        })\r\n    )\r\n\r\n    const [worldSettings, clientSettings] = ['world', 'client'].map(scope =>\r\n        settings.filter(settings => settings.scope === scope)\r\n    )\r\n\r\n    ;[worldSettings, clientSettings].forEach(settings =>\r\n        settings.forEach(setting => game.settings.register(MODULE_ID, setting.key, setting))\r\n    )\r\n\r\n    if (isGM) {\r\n        firstClientSetting = clientSettings[0].key\r\n        Hooks.on('renderSettingsConfig', renderSettingsConfig)\r\n    }\r\n\r\n    const module = game.modules.get(MODULE_ID)\r\n    module.api = {}\r\n\r\n    FEATURES.forEach(feature => {\r\n        const { init, conflicts = [], api, name } = feature\r\n\r\n        if (isGM) {\r\n            for (const id of conflicts) {\r\n                const conflictingModule = game.modules.get(id)\r\n                if (conflictingModule?.active) {\r\n                    feature.conflicting = true\r\n                    CONFLICTS.add(conflictingModule.title)\r\n                }\r\n            }\r\n        }\r\n\r\n        if (api && name) module.api[name] = api\r\n\r\n        if (!feature.conflicting && init) init(isGM)\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    const isGM = game.user.isGM\r\n\r\n    for (const { conflicting, ready } of FEATURES) {\r\n        if (!conflicting && ready) ready(isGM)\r\n    }\r\n\r\n    if (isGM) {\r\n        for (const conflict of CONFLICTS) {\r\n            warn('module-conflict', { name: conflict }, true)\r\n        }\r\n    }\r\n})\r\n\r\nfunction settingPath(setting, key) {\r\n    return `${MODULE_ID}.settings.${setting}.${key}`\r\n}\r\n\r\nfunction renderSettingsConfig(_, html) {\r\n    if (!firstClientSetting) return\r\n\r\n    const group = html.find(`.tab[data-tab=${MODULE_ID}] [data-setting-id=\"${MODULE_ID}.${firstClientSetting}\"]`)\r\n    group.before(`<h3>${localize('settings.client')}</h3>`)\r\n}\r\n"],
  "mappings": "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",
  "names": ["MODULE_ID", "getSetting", "setting", "__name", "setSetting", "key", "value", "localize", "args", "data", "hasLocalization", "localizePath", "subLocalize", "subKey", "fn", "warn", "info", "error", "hash", "notify", "str", "arg1", "arg2", "arg3", "type", "permanent", "registerWrapper", "path", "callback", "getFlag", "doc", "fallback", "setFlag", "templatePath", "x", "localeCompare", "a", "b", "socketOn", "socketOff", "socketEmit", "packet", "isActiveGM", "registerUpstreamHook", "hook", "id", "index", "hooked", "isGMOnline", "user", "chatUUID", "uuid", "label", "fake", "getSourceId", "includesSourceId", "list", "sourceId", "getItemSourceIdCondition", "item", "hasItemWithSourceId", "actor", "itemTypes", "getItems", "refreshCharacterSheets", "win", "winActor", "documentUuidFromTableResult", "result", "getCharacterOwner", "connected", "getOwner", "PREPARE_WEAPON_DATA", "PREPARE_WEAPON_DERIVED_DATA", "PREPARE_ARMOR_DATA", "PREPARE_ARMOR_DERIVED_DATA", "WEAPON_EXCLUDES", "registerArp", "getSetting", "registerWrapper", "onPrepareWeaponData", "onPrepareWeaponDerivedData", "onPrepareArmorData", "onPrepareArmorDerivedData", "isGM", "info", "__name", "isValidActor", "actor", "isCharacter", "isValidWeapon", "weapon", "traits", "wrapped", "level", "WEAPON_POTENCY_PRICE", "WEAPON_STRIKING_PRICE", "gp", "potency", "striking", "isValidArmor", "armor", "ARMOR_POTENCY_PRICE", "ARMOR_RESILIENCY_PRICE", "resiliency", "createHook", "event", "listener", "callback", "HOOK", "value", "otherSettings", "s", "getSetting", "__name", "createChoicesHook", "setHook", "createHook", "renderEffectsPanel", "refreshEffectsPanel", "registerEffectsPanelHelper", "value", "__name", "panel", "html", "removeRow", "localize", "editIcon", "effectPanels", "effectPanel", "id", "effect", "getSetting", "event", "onRemoveEffect", "h1", "onConditionSheet", "getEffect", "MoveLootPopup", "object", "options", "callback", "prompt", "buttonLabel", "_event", "formData", "__name", "enabled", "CANVAS_HOOK", "registerGiveth", "setup", "isGM", "getSetting", "__name", "value", "socketOff", "onSocket", "socketOn", "registerUpstreamHook", "onDropCanvasData", "packet", "isActiveGM", "takethCondition", "takethEffect", "takethPhysical", "canvas", "data", "isGMOnline", "details", "getDetailsFromData", "target", "token", "isValidActor", "maximumX", "maximumY", "b", "giveth", "origin", "item", "ownerId", "targetId", "isIndex", "qty", "warn", "sendPhysicalRequest", "MoveLootPopup", "stack", "uuid", "socketEmit", "itemId", "actor", "id", "actorUUID", "source", "owner", "newQty", "newItem", "content", "chatUUID", "localize", "localize", "subLocalize", "EditLores", "templatePath", "options", "actor", "getFlag", "event", "unspecified", "specific", "setFlag", "html", "#onCancel", "__name", "setHook", "createHook", "renderNPCSheetPF2e", "registerKnowledges", "value", "isGM", "getSetting", "__name", "sheet", "$html", "actor", "replaceLores", "addEditButton", "addEvents", "knowledgeSelector", "html", "section", "selector", "editLores", "EditLores", "unspecifics", "getFlag", "specifics", "lores", "body", "tag", "skills", "dc", "adjustment", "addTags", "start", "tags", "lore", "attempts", "edit", "localize", "subLocalize", "MultiCast", "spell", "options", "templatePath", "html", "#onCast", "#onCancel", "event", "nb", "damages", "heightening", "id", "damage", "i", "newId", "level", "data", "__name", "FLAVOR_TAGS", "FLAVOR_MODIFIERS", "FORMULA_STRIP", "setHook", "createHook", "renderChatMessage", "updateMessages", "registerMerge", "value", "isGm", "__name", "chat", "message", "chatMessages", "html", "getSetting", "isDamageRoll", "renderDamage", "renderSpell", "uuid", "spellBtn", "localize", "event", "spell", "MultiCast", "getMessageUuid", "button", "originTarget", "getMessageTarget", "otherMessage", "mergeDamages", "warn", "origin", "other", "name", "getItemName", "tags", "getTags", "notes", "getMessageNotes", "modifiers", "getMessageModifiers", "target", "note", "modifier", "originRolls", "getMessageRolls", "otherRolls", "grouped", "findGroup", "options", "flavor", "critRule", "roll", "total", "terms", "term", "formula", "group", "createTermGroup", "acc", "templatePath", "MODULE_ID", "nb", "fromMessage", "messages", "start", "m", "i", "getFlag", "getMessageFlag", "m1", "m2", "title", "text", "match", "systemFlag", "moduleFlag", "ACTOR_PREPARE_EMBEDDED_DOCUMENTS", "registerNobulk", "getSetting", "registerWrapper", "actorPrepareEmbeddedDocuments", "__name", "wrapped", "args", "actor", "InventoryBulk", "inventoryBulk", "setSheetHook", "createHook", "renderCharacterSheetPF2e", "setDeleteCombatHook", "deleteCombat", "setDeleteCombatantHook", "deleteCombatant", "setCreateCombatantHook", "createCombatant", "STANCES", "EFFECTS", "ACTIONS", "STANCE_SAVANT", "REPLACERS", "EXTRAS", "registerStances", "setup", "loadStances", "getPackStances", "getStances", "toggleStance", "isValidStance", "getActionsUUIDS", "isGm", "getSetting", "__name", "value", "addStances", "pack", "stance", "uuid", "effect", "action", "name", "customStances", "custom", "trimmed", "usableUuid", "replacer", "refreshCharacterSheets", "feat", "actor", "stances", "replaced", "effects", "actions", "sourceId", "effectUUID", "sheet", "html", "inCombat", "token", "tab", "options", "template", "templatePath", "subLocalize", "event", "onToggleStance", "target", "canUseStances", "getEffects", "already", "create", "other", "more", "x", "addStance", "obj", "combat", "combatant", "getActorFromCombatant", "checkForSavant", "hasItemWithSourceId", "info", "openStancesMenu", "localize", "setHook", "createChoicesHook", "renderCharacterSheetPF2e", "refreshCharacterSheets", "registerSpellsSummary", "value", "isGm", "getSetting", "__name", "sheet", "html", "actor", "tab", "getSpellcastingTab", "MODULE_ID", "getSpellcastingNav", "event", "onSpellcastingBtnToggle", "addSummaryTab", "data", "getData", "template", "templatePath", "addSummaryEvents", "summary", "getSpellcastingSummarySection", "inputs", "onUsesInputChange", "onUsesInputFocus", "onUsesInputBlur", "onCastSpell", "onTogglePrepare", "onToggleFocusPool", "onSlotsReset", "onItemToChat", "onToggleSummary", "inputPath", "entryId", "slotLevel", "slotId", "expended", "change", "points", "onChargeReset", "getSpellcastingOriginalSection", "itemId", "level", "isCharge", "item", "slot", "max", "target", "collection", "spell", "focusPool", "stavesActive", "spells", "focuses", "hasFocusCantrips", "entry", "entryDc", "entryName", "isFocus", "isStaff", "charges", "slotSpells", "isCantrip", "actives", "x", "isBroken", "virtual", "uses", "castLevel", "sort", "a", "b", "localeCompare", "rituals", "CREATE_HOOK", "UPDATE_HOOK", "registerUnided", "setHooks", "__name", "value", "getSetting", "preCreateItem", "preUpdateItem", "item", "changes", "localize", "subLocalize", "Trade", "actor", "templatePath", "value", "options", "x", "getHeroActions", "html", "#onChangeTarget", "#onDescription", "#onSendTrade", "force", "action", "target", "getCharacterOwner", "getOwner", "user", "sendTradeRequest", "event", "uuid", "id", "__name", "MODULE_ID", "SOCKET", "setHook", "createHook", "renderCharacterSheetPF2e", "setupSocket", "JOURNAL_UUID", "TABLE_UUID", "TABLE_ICON", "registerHeroActions", "value", "refreshCharacterSheets", "createTable", "removeHeroActions", "getHeroActions", "useHeroAction", "getHeroActionDetails", "drawHeroAction", "drawHeroActions", "sendActionToChat", "discardHeroActions", "tradeHeroAction", "isGM", "__name", "socketOn", "onSocket", "socketOff", "packet", "onTradeRejected", "isActiveGM", "onTradeAccepted", "onTradeRequest", "onTradeError", "sheet", "html", "actor", "addActionsToSheet", "addSheetEvents", "actions", "diff", "isOwner", "localize", "subLocalize", "template", "templatePath", "getSetting", "key", "hash", "list", "event", "onClickHeroActionsDraw", "onClickHeroActionExpand", "onClickHeroActionUse", "onClickHeroActionDisplay", "onClickHeroActionDiscard", "onClickHeroActionsDiscard", "uuids", "x", "action", "toDiscard", "$discarded", "uuid", "setHeroActions", "summary", "details", "text", "document", "parent", "page", "nb", "drawn", "i", "content", "size", "chatActions", "data", "links", "name", "chatUUID", "warn", "Trade", "table", "getDeckTable", "r", "draw", "documentUuidFromTableResult", "getLabelfromTableResult", "points", "index", "error", "removed", "result", "getTableFromUuid", "getDefaultCompendiumTable", "getDefaultWorldTable", "getCustomTable", "sendTradeRequest", "trade", "acceptRequest", "socketEmit", "sender", "receiver", "senderActor", "receiverActor", "sendTradeError", "senderActions", "receiverActions", "senderActionIndex", "receiverActionIndex", "senderAction", "receiverAction", "sentLink", "receivedLink", "users", "err", "rejectRequest", "buttons", "type", "unique", "createDefaultTable", "createCustomTable", "createCustomActionsTable", "setTable", "source", "getTableSource", "update", "createDefautActionsTable", "normalize", "setSetting", "removeActionsToggleAll", "removeActionsToggleActor", "actors", "state", "checked", "all", "FEATURES", "registerArp", "registerNobulk", "registerGiveth", "registerKnowledges", "registerUnided", "registerMerge", "registerEffectsPanelHelper", "registerSpellsSummary", "registerStances", "registerHeroActions", "CONFLICTS", "firstClientSetting", "user", "x", "isGM", "settings", "setting", "key", "choices", "choice", "settingPath", "worldSettings", "clientSettings", "scope", "MODULE_ID", "renderSettingsConfig", "module", "feature", "init", "conflicts", "api", "name", "id", "conflictingModule", "conflicting", "ready", "conflict", "warn", "__name", "_", "html", "localize"]
}
